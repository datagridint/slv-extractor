<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9200.16.0114.0856                                -->
<workbook source-platform='win' version='9.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='slv-all' inline='true' name='textscan.42376.965418900465' version='9.2'>
      <connection class='textscan' directory='C:/Dev/projects/DataGrid/slv-extractor/data' filename='slv-all.csv' password='' server=''>
        <relation name='slv-all#csv' table='[slv-all#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='geoZoneNamesPath' ordinal='0' />
            <column datatype='string' name='name' ordinal='1' />
            <column datatype='datetime' name='eventTime' ordinal='2' />
            <column datatype='datetime' name='updateTime' ordinal='3' />
            <column datatype='real' name='Temperature' ordinal='4' />
            <column datatype='real' name='RunningHoursLamp' ordinal='5' />
            <column datatype='real' name='Energy' ordinal='6' />
            <column datatype='real' name='Current' ordinal='7' />
            <column datatype='real' name='MainVoltage' ordinal='8' />
            <column datatype='real' name='MeteredPower' ordinal='9' />
            <column datatype='real' name='PowerFactor' ordinal='10' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>geoZoneNamesPath</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geoZoneNamesPath]</local-name>
            <parent-name>[slv-all#csv]</parent-name>
            <remote-alias>geoZoneNamesPath</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[slv-all#csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eventTime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[eventTime]</local-name>
            <parent-name>[slv-all#csv]</parent-name>
            <remote-alias>eventTime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>updateTime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[updateTime]</local-name>
            <parent-name>[slv-all#csv]</parent-name>
            <remote-alias>updateTime</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Temperature]</local-name>
            <parent-name>[slv-all#csv]</parent-name>
            <remote-alias>Temperature</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RunningHoursLamp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RunningHoursLamp]</local-name>
            <parent-name>[slv-all#csv]</parent-name>
            <remote-alias>RunningHoursLamp</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy]</local-name>
            <parent-name>[slv-all#csv]</parent-name>
            <remote-alias>Energy</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Current]</local-name>
            <parent-name>[slv-all#csv]</parent-name>
            <remote-alias>Current</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MainVoltage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[MainVoltage]</local-name>
            <parent-name>[slv-all#csv]</parent-name>
            <remote-alias>MainVoltage</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MeteredPower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[MeteredPower]</local-name>
            <parent-name>[slv-all#csv]</parent-name>
            <remote-alias>MeteredPower</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PowerFactor</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PowerFactor]</local-name>
            <parent-name>[slv-all#csv]</parent-name>
            <remote-alias>PowerFactor</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[slv-all#csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='CountD' caption='Main Voltage' datatype='real' name='[MainVoltage]' role='measure' type='quantitative' />
      <column caption='Metered Power' datatype='real' name='[MeteredPower]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Power Factor' datatype='real' name='[PowerFactor]' role='measure' type='quantitative' />
      <column caption='Running Hours Lamp' datatype='real' name='[RunningHoursLamp]' role='measure' type='quantitative' />
      <column caption='Event Time' datatype='datetime' name='[eventTime]' role='dimension' type='ordinal' />
      <column caption='Geo Zone Names Path' datatype='string' name='[geoZoneNamesPath]' role='dimension' type='nominal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Update Time' datatype='datetime' name='[updateTime]' role='dimension' type='ordinal' />
      <column-instance column='[geoZoneNamesPath]' derivation='None' name='[none:geoZoneNamesPath:nk]' pivot='key' type='nominal' />
      <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Dev\projects\DataGrid\slv-extractor\tableau\slv-all.tde' schema='Extract' tablename='Extract' update-time='01/09/2016 06:28:30 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='601067' timestamp-start='2016-01-09 18:28:30.209' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Current</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Current]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Current</remote-alias>
              <ordinal>0</ordinal>
              <family>slv-all#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>191</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>2.75</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Energy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Energy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Energy</remote-alias>
              <ordinal>1</ordinal>
              <family>slv-all#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17034</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>1718.2</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>MainVoltage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[MainVoltage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>MainVoltage</remote-alias>
              <ordinal>2</ordinal>
              <family>slv-all#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1283</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>268.39999999999998</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>MeteredPower</remote-name>
              <remote-type>5</remote-type>
              <local-name>[MeteredPower]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>MeteredPower</remote-alias>
              <ordinal>3</ordinal>
              <family>slv-all#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1844</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>244.69999999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>4</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PowerFactor</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PowerFactor]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PowerFactor</remote-alias>
              <ordinal>5</ordinal>
              <family>slv-all#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6480</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.99985000000000002</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>RunningHoursLamp</remote-name>
              <remote-type>4</remote-type>
              <local-name>[RunningHoursLamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>RunningHoursLamp</remote-alias>
              <ordinal>6</ordinal>
              <family>slv-all#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11497</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>13494.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Temperature</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Temperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Temperature</remote-alias>
              <ordinal>7</ordinal>
              <family>slv-all#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>57</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>62.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>eventTime</remote-name>
              <remote-type>135</remote-type>
              <local-name>[eventTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>eventTime</remote-alias>
              <ordinal>8</ordinal>
              <family>slv-all#csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>508602</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2015-01-05 04:00:06#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2016-01-05 03:57:40#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>geoZoneNamesPath</remote-name>
              <remote-type>129</remote-type>
              <local-name>[geoZoneNamesPath]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>geoZoneNamesPath</remote-alias>
              <ordinal>9</ordinal>
              <family>slv-all#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AMKO Taiwan/Abu Dhabi/Pilot Site Mussafah - Induction&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;AMKO Taiwan/Battambang/Battambang NH5&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name</remote-alias>
              <ordinal>10</ordinal>
              <family>slv-all#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>90</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;01&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;P33&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>updateTime</remote-name>
              <remote-type>135</remote-type>
              <local-name>[updateTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>updateTime</remote-alias>
              <ordinal>11</ordinal>
              <family>slv-all#csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>25324</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2015-01-05 13:13:04#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2016-01-05 02:15:31#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.457606' measure-ordering='alphabetic' measure-percentage='0.542394' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:name:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;A10-26&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;lamp20&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;P27&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;A10-1&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;AF-A04-85w&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;lamp02&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;lamp22&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;P29&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;A10-5&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;AF-R14-120w&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;lamp06&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;lamp26&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;P33&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;A10-16&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;lamp16&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;P23&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;A10-11&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;lamp12&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;lamp32&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;A10-9&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;lamp10&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;lamp30&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;A10-6&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;lamp07&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;lamp27&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;lamp01&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;lamp21&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;P28&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;A10-2&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;AF-R14-55w&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;lamp03&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;lamp23&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;P30&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;A10-18&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;lamp18&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;P25&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;A10-12&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;lamp13&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;P20&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;A10-10&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;lamp11&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;lamp31&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;A10-17&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;lamp17&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;P24&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;A10-7&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;lamp08&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;lamp28&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;A10-21&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;lamp19&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;P26&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;A10-14&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;lamp14&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;P21&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;A10-15&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;lamp15&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;P22&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;A10-3&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;AF-R14-80w&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;lamp04&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;lamp24&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;P31&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;A10-8&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;lamp09&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;lamp29&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;A10-4&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;AF-R14-100w&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;lamp05&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;lamp25&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;P32&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:geoZoneNamesPath:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;AMKO Taiwan/Battambang/Battambang NH5&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;AMKO Taiwan/AMKO Belize/Coney Drive Roundabout&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;AMKO Taiwan/AMKO Show Room&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;AMKO Taiwan/AMKO El Salvador/Suchitoto Pilot&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;AMKO Taiwan/Abu Dhabi/Pilot Site Mussafah - Induction&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='readings (streetlightdata)' inline='true' name='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv' version='9.2'>
      <connection class='googlecloudsql' dbname='streetlightdata' odbc-native-protocol='' port='3306' server='173.194.249.226' source-charset='' username='slvdbuser'>
        <relation name='readings' table='[readings]' type='table' />
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>geoZoneNamesPath</remote-name>
            <remote-type>130</remote-type>
            <local-name>[geoZoneNamesPath]</local-name>
            <parent-name>[readings]</parent-name>
            <remote-alias>geoZoneNamesPath</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>100</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[readings]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eventTime</remote-name>
            <remote-type>7</remote-type>
            <local-name>[eventTime]</local-name>
            <parent-name>[readings]</parent-name>
            <remote-alias>eventTime</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>updateTime</remote-name>
            <remote-type>7</remote-type>
            <local-name>[updateTime]</local-name>
            <parent-name>[readings]</parent-name>
            <remote-alias>updateTime</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Temperature</remote-name>
            <remote-type>131</remote-type>
            <local-name>[Temperature]</local-name>
            <parent-name>[readings]</parent-name>
            <remote-alias>Temperature</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <scale>1</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RunningHoursLamp</remote-name>
            <remote-type>3</remote-type>
            <local-name>[RunningHoursLamp]</local-name>
            <parent-name>[readings]</parent-name>
            <remote-alias>RunningHoursLamp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy</remote-name>
            <remote-type>131</remote-type>
            <local-name>[Energy]</local-name>
            <parent-name>[readings]</parent-name>
            <remote-alias>Energy</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <scale>1</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current</remote-name>
            <remote-type>131</remote-type>
            <local-name>[Current]</local-name>
            <parent-name>[readings]</parent-name>
            <remote-alias>Current</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MainVoltage</remote-name>
            <remote-type>131</remote-type>
            <local-name>[MainVoltage]</local-name>
            <parent-name>[readings]</parent-name>
            <remote-alias>MainVoltage</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>7</precision>
            <scale>1</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MeteredPower</remote-name>
            <remote-type>131</remote-type>
            <local-name>[MeteredPower]</local-name>
            <parent-name>[readings]</parent-name>
            <remote-alias>MeteredPower</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <scale>1</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PowerFactor</remote-name>
            <remote-type>131</remote-type>
            <local-name>[PowerFactor]</local-name>
            <parent-name>[readings]</parent-name>
            <remote-alias>PowerFactor</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>7</precision>
            <scale>6</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Main Voltage' datatype='real' name='[MainVoltage]' role='measure' type='quantitative' />
      <column caption='Metered Power' datatype='real' name='[MeteredPower]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Power Factor' datatype='real' name='[PowerFactor]' role='measure' type='quantitative' />
      <column caption='Running Hours Lamp' datatype='integer' name='[RunningHoursLamp]' role='measure' type='quantitative' />
      <column caption='Event Time' datatype='datetime' name='[eventTime]' role='dimension' type='ordinal' />
      <column caption='Geo Zone Names Path' datatype='string' name='[geoZoneNamesPath]' role='dimension' type='nominal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Update Time' datatype='datetime' name='[updateTime]' role='dimension' type='ordinal' />
      <column-instance column='[geoZoneNamesPath]' derivation='None' name='[none:geoZoneNamesPath:nk]' pivot='key' type='nominal' />
      <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='false' units='records'>
        <connection class='dataengine' dbname='C:\Dev\projects\DataGrid\slv-extractor\tableau\readings (streetlightdata).tde' schema='Extract' tablename='Extract' update-time='02/05/2016 07:50:03 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='665809' timestamp-start='2016-02-05 19:50:03.977' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Current</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Current]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Current</remote-alias>
              <ordinal>0</ordinal>
              <family>readings</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>193</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>2.75</statistic>
                <statistic aggregation='Count' datatype='integer'>177618</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Energy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Energy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Energy</remote-alias>
              <ordinal>1</ordinal>
              <family>readings</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17610</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>1783.9000000000001</statistic>
                <statistic aggregation='Count' datatype='integer'>277021</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>MainVoltage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[MainVoltage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>MainVoltage</remote-alias>
              <ordinal>2</ordinal>
              <family>readings</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1299</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>268.39999999999998</statistic>
                <statistic aggregation='Count' datatype='integer'>506834</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>MeteredPower</remote-name>
              <remote-type>5</remote-type>
              <local-name>[MeteredPower]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>MeteredPower</remote-alias>
              <ordinal>3</ordinal>
              <family>readings</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1867</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>244.69999999999999</statistic>
                <statistic aggregation='Count' datatype='integer'>382608</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>4</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>665809</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PowerFactor</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PowerFactor]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PowerFactor</remote-alias>
              <ordinal>5</ordinal>
              <family>readings</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6524</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.99985000000000002</statistic>
                <statistic aggregation='Count' datatype='integer'>492256</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>RunningHoursLamp</remote-name>
              <remote-type>2</remote-type>
              <local-name>[RunningHoursLamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>RunningHoursLamp</remote-alias>
              <ordinal>6</ordinal>
              <family>readings</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12180</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>13494</statistic>
                <statistic aggregation='Count' datatype='integer'>119209</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Temperature</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Temperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Temperature</remote-alias>
              <ordinal>7</ordinal>
              <family>readings</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>58</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>62.0</statistic>
                <statistic aggregation='Count' datatype='integer'>106236</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>eventTime</remote-name>
              <remote-type>135</remote-type>
              <local-name>[eventTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>eventTime</remote-alias>
              <ordinal>8</ordinal>
              <family>readings</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>534806</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2015-01-05 04:00:06#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2016-02-05 10:48:57#</statistic>
                <statistic aggregation='Count' datatype='integer'>665809</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>geoZoneNamesPath</remote-name>
              <remote-type>129</remote-type>
              <local-name>[geoZoneNamesPath]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>geoZoneNamesPath</remote-alias>
              <ordinal>9</ordinal>
              <family>readings</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>100</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AMKO Taiwan/Abu Dhabi/Pilot Site Mussafah - Induction&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;AMKO Taiwan/Battambang/Battambang NH5&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>665809</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;AMKO Taiwan/Abu Dhabi/Pilot Site Mussafah - Induction&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>400</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name</remote-alias>
              <ordinal>10</ordinal>
              <family>readings</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>90</approx-count>
              <scale>1</scale>
              <width>45</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;01&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;P33&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>665809</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>180</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>updateTime</remote-name>
              <remote-type>135</remote-type>
              <local-name>[updateTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>updateTime</remote-alias>
              <ordinal>11</ordinal>
              <family>readings</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>27368</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2015-01-05 13:13:04#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2016-02-05 15:54:04#</statistic>
                <statistic aggregation='Count' datatype='integer'>665809</statistic>
                <statistic aggregation='Median' datatype='datetime'>#2015-10-10 03:10:41#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.457606' measure-ordering='alphabetic' measure-percentage='0.542394' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:geoZoneNamesPath:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;AMKO Taiwan/Abu Dhabi/Pilot Site Mussafah - Induction&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;AMKO Taiwan/AMKO El Salvador/Suchitoto Pilot&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;AMKO Taiwan/Battambang/Battambang NH5&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:name:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;A10-18&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;lamp19&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;P24&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;A10-15&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;lamp01&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;lamp21&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;P31&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;AF-R14-120w&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;lamp05&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;lamp25&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;P29&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;A10-26&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;lamp15&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;P26&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;AF-R14-100w&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;lamp11&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;lamp31&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;P23&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;A10-6&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;AF-A04-85w&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;lamp09&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;lamp29&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;P21&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;AF-R14-80w&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;lamp06&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;lamp26&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;A10-16&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;lamp20&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;A10-1&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;lamp02&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;lamp22&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;P32&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;A10-12&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;lamp17&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;A10-10&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;lamp12&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;lamp32&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;A10-5&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;AF-R14-55w&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;lamp10&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;lamp30&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;P22&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;A10-4&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;lamp16&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;P20&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;A10-21&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;A10-8&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;lamp07&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;lamp27&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;P28&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;A10-2&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;lamp18&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;P27&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;A10-14&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;lamp13&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;A10-9&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;lamp14&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;A10-17&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;lamp03&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;lamp23&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;P33&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;A10-11&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;A10-7&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;lamp08&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;lamp28&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;P25&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;A10-3&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;lamp04&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;lamp24&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;P30&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='All Averages'>
      <table>
        <view>
          <datasources>
            <datasource caption='readings (streetlightdata)' name='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv' />
          </datasources>
          <datasource-dependencies datasource='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv'>
            <column datatype='real' name='[Current]' role='measure' type='quantitative' />
            <column datatype='real' name='[Energy]' role='measure' type='quantitative' />
            <column caption='Main Voltage' datatype='real' name='[MainVoltage]' role='measure' type='quantitative' />
            <column caption='Metered Power' datatype='real' name='[MeteredPower]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Power Factor' datatype='real' name='[PowerFactor]' role='measure' type='quantitative' />
            <column caption='Running Hours Lamp' datatype='integer' name='[RunningHoursLamp]' role='measure' type='quantitative' />
            <column datatype='real' name='[Temperature]' role='measure' type='quantitative' />
            <column-instance column='[Current]' derivation='Avg' name='[avg:Current:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Energy]' derivation='Avg' name='[avg:Energy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MainVoltage]' derivation='Avg' name='[avg:MainVoltage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MeteredPower]' derivation='Avg' name='[avg:MeteredPower:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PowerFactor]' derivation='Avg' name='[avg:PowerFactor:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RunningHoursLamp]' derivation='Avg' name='[avg:RunningHoursLamp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Temperature]' derivation='Avg' name='[avg:Temperature:qk]' pivot='key' type='quantitative' />
            <column caption='Event Time' datatype='datetime' name='[eventTime]' role='dimension' type='ordinal' />
            <column caption='Geo Zone Names Path' datatype='string' name='[geoZoneNamesPath]' role='dimension' type='nominal' />
            <column-instance column='[eventTime]' derivation='None' name='[none:eventTime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[geoZoneNamesPath]' derivation='None' name='[none:geoZoneNamesPath:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[eventTime]' derivation='Hour-Trunc' name='[thr:eventTime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:MainVoltage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:Current:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:PowerFactor:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:MeteredPower:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:Temperature:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:Energy:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:RunningHoursLamp:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[sum:Number of Records:qk]&quot;</bucket>
              <bucket>&quot;[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:MainVoltage:qk]&quot;</bucket>
              <bucket>&quot;[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:Current:qk]&quot;</bucket>
              <bucket>&quot;[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:PowerFactor:qk]&quot;</bucket>
              <bucket>&quot;[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:MeteredPower:qk]&quot;</bucket>
              <bucket>&quot;[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:Temperature:qk]&quot;</bucket>
              <bucket>&quot;[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:Energy:qk]&quot;</bucket>
              <bucket>&quot;[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:RunningHoursLamp:qk]&quot;</bucket>
              <bucket>&quot;[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:Lamp burning hours:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:eventTime:qk]' included-values='in-range'>
            <min>#2015-03-22 00:00:00#</min>
            <max>#2016-01-05 23:59:59#</max>
          </filter>
          <filter class='categorical' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]'>
            <groupfilter function='member' level='[none:geoZoneNamesPath:nk]' member='&quot;AMKO Taiwan/Abu Dhabi/Pilot Site Mussafah - Induction&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[:Measure Names]</column>
            <column>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]</column>
            <column>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:eventTime:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[Multiple Values]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[Multiple Values]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[thr:eventTime:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[thr:eventTime:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[thr:eventTime:qk]' field-type='quantitative' max='#2016-01-26 00:00:20.261#' min='#2015-06-26 00:00:00#' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:Current:qk]' value='n#,##0.000;-#,##0.000' />
            <format attr='text-format' field='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:PowerFactor:qk]' value='n#,##0.000;-#,##0.000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1358' />
                <format attr='maxwidth' value='1358' />
                <format attr='minheight' value='242' />
                <format attr='maxheight' value='242' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1358' />
                <format attr='maxwidth' value='1358' />
                <format attr='minheight' value='242' />
                <format attr='maxheight' value='242' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[:Measure Names] * [googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[Multiple Values])</rows>
        <cols>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[thr:eventTime:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Current by Lamp over Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='readings (streetlightdata)' name='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv' />
          </datasources>
          <datasource-dependencies datasource='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv'>
            <column datatype='real' name='[Current]' role='measure' type='quantitative' />
            <column-instance column='[Current]' derivation='Avg' name='[avg:Current:qk]' pivot='key' type='quantitative' />
            <column caption='Event Time' datatype='datetime' name='[eventTime]' role='dimension' type='ordinal' />
            <column caption='Geo Zone Names Path' datatype='string' name='[geoZoneNamesPath]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[geoZoneNamesPath]' derivation='None' name='[none:geoZoneNamesPath:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[eventTime]' derivation='Hour-Trunc' name='[thr:eventTime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]'>
            <groupfilter function='member' level='[none:geoZoneNamesPath:nk]' member='&quot;AMKO Taiwan/Abu Dhabi/Pilot Site Mussafah - Induction&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk] * [googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:Current:qk])</rows>
        <cols>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[thr:eventTime:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Driver Temp by Lamp'>
      <table>
        <view>
          <datasources>
            <datasource caption='readings (streetlightdata)' name='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv' />
          </datasources>
          <datasource-dependencies datasource='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv'>
            <column datatype='real' name='[Temperature]' role='measure' type='quantitative' />
            <column caption='Geo Zone Names Path' datatype='string' name='[geoZoneNamesPath]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Temperature]' derivation='None' name='[none:Temperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[geoZoneNamesPath]' derivation='None' name='[none:geoZoneNamesPath:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:Temperature:qk]' included-values='in-range'>
            <min>19.6</min>
            <max>62.0</max>
          </filter>
          <filter class='categorical' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]'>
            <groupfilter function='member' level='[none:geoZoneNamesPath:nk]' member='&quot;AMKO Taiwan/Abu Dhabi/Pilot Site Mussafah - Induction&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]</column>
            <column>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:Temperature:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refboxplot'>
            <format attr='boxplot-style' id='refline0' value='glass' />
            <format attr='stroke-size' id='refline0' value='2' />
            <format attr='whisker-end' id='refline0' value='large' />
            <format attr='whisker-stroke-size' id='refline0' value='2' />
            <format attr='whisker-stroke-color' id='refline0' value='#555555' />
            <format attr='fill-color' id='refline0' value='#f0f0f041' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]' />
            </encodings>
            <reference-line axis-column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:Temperature:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' symmetric='false' value-column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:Temperature:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:Temperature:qk]</rows>
        <cols>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Power Factor by Lamp over Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='readings (streetlightdata)' name='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv' />
          </datasources>
          <datasource-dependencies datasource='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv'>
            <column caption='Power Factor' datatype='real' name='[PowerFactor]' role='measure' type='quantitative' />
            <column-instance column='[PowerFactor]' derivation='Avg' name='[avg:PowerFactor:qk]' pivot='key' type='quantitative' />
            <column caption='Event Time' datatype='datetime' name='[eventTime]' role='dimension' type='ordinal' />
            <column caption='Geo Zone Names Path' datatype='string' name='[geoZoneNamesPath]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[geoZoneNamesPath]' derivation='None' name='[none:geoZoneNamesPath:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[eventTime]' derivation='Hour-Trunc' name='[thr:eventTime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]'>
            <groupfilter function='member' level='[none:geoZoneNamesPath:nk]' member='&quot;AMKO Taiwan/Abu Dhabi/Pilot Site Mussafah - Induction&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk] * [googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:PowerFactor:qk])</rows>
        <cols>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[thr:eventTime:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Power Factory by Lamp'>
      <table>
        <view>
          <datasources>
            <datasource caption='readings (streetlightdata)' name='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv' />
          </datasources>
          <datasource-dependencies datasource='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv'>
            <column caption='Power Factor' datatype='real' name='[PowerFactor]' role='measure' type='quantitative' />
            <column-instance column='[PowerFactor]' derivation='Avg' name='[avg:PowerFactor:qk]' pivot='key' type='quantitative' />
            <column caption='Geo Zone Names Path' datatype='string' name='[geoZoneNamesPath]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[PowerFactor]' derivation='None' name='[none:PowerFactor:qk]' pivot='key' type='quantitative' />
            <column-instance column='[geoZoneNamesPath]' derivation='None' name='[none:geoZoneNamesPath:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[PowerFactor]' derivation='Stdev' name='[std:PowerFactor:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:PowerFactor:qk]' included-values='in-range'>
            <min>0.896</min>
            <max>0.99985</max>
          </filter>
          <filter class='categorical' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]'>
            <groupfilter function='member' level='[none:geoZoneNamesPath:nk]' member='&quot;AMKO Taiwan/Abu Dhabi/Pilot Site Mussafah - Induction&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]' direction='ASC' using='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:PowerFactor:qk]' />
          <slices>
            <column>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]</column>
            <column>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:PowerFactor:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:PowerFactor:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:PowerFactor:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:PowerFactor:qk]' field-type='quantitative' max='1.0' min='0.97999999999999998' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='boxplot-style' id='refline0' value='glass' />
            <format attr='stroke-size' id='refline0' value='2' />
            <format attr='whisker-end' id='refline0' value='large' />
            <format attr='whisker-stroke-size' id='refline0' value='2' />
            <format attr='whisker-stroke-color' id='refline0' value='#555555' />
            <format attr='fill-color' id='refline0' value='#f0f0f041' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]' />
            </encodings>
            <reference-line axis-column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:PowerFactor:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='none' probability='95' scope='per-cell' symmetric='false' value-column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:PowerFactor:qk]' z-order='1' />
          </pane>
          <pane id='5' x-axis-name='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:PowerFactor:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]' />
            </encodings>
          </pane>
          <pane id='6' x-axis-name='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[std:PowerFactor:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]' />
            </encodings>
          </pane>
          <pane id='7' x-axis-name='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:PowerFactor:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]</rows>
        <cols>([googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:PowerFactor:qk] + ([googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[std:PowerFactor:qk] + [googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:PowerFactor:qk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Power by Lamp'>
      <table>
        <view>
          <datasources>
            <datasource caption='readings (streetlightdata)' name='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv' />
          </datasources>
          <datasource-dependencies datasource='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv'>
            <column caption='Metered Power' datatype='real' name='[MeteredPower]' role='measure' type='quantitative' />
            <column caption='Power Factor' datatype='real' name='[PowerFactor]' role='measure' type='quantitative' />
            <column-instance column='[MeteredPower]' derivation='Avg' name='[avg:MeteredPower:qk]' pivot='key' type='quantitative' />
            <column caption='Geo Zone Names Path' datatype='string' name='[geoZoneNamesPath]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[MeteredPower]' derivation='None' name='[none:MeteredPower:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PowerFactor]' derivation='None' name='[none:PowerFactor:qk]' pivot='key' type='quantitative' />
            <column-instance column='[geoZoneNamesPath]' derivation='None' name='[none:geoZoneNamesPath:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[MeteredPower]' derivation='Stdev' name='[std:MeteredPower:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:PowerFactor:qk]' included-values='in-range'>
            <min>0.896</min>
            <max>0.99985</max>
          </filter>
          <filter class='categorical' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]'>
            <groupfilter function='member' level='[none:geoZoneNamesPath:nk]' member='&quot;AMKO Taiwan/Abu Dhabi/Pilot Site Mussafah - Induction&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]' direction='ASC' using='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:MeteredPower:qk]' />
          <slices>
            <column>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]</column>
            <column>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:PowerFactor:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refboxplot'>
            <format attr='boxplot-style' id='refline0' value='glass' />
            <format attr='stroke-size' id='refline0' value='2' />
            <format attr='whisker-end' id='refline0' value='large' />
            <format attr='whisker-stroke-size' id='refline0' value='2' />
            <format attr='whisker-stroke-color' id='refline0' value='#555555' />
            <format attr='fill-color' id='refline0' value='#f0f0f041' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]' />
            </encodings>
            <reference-line axis-column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:MeteredPower:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline2' label-type='none' probability='95' scope='per-cell' symmetric='false' value-column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:MeteredPower:qk]' z-order='1' />
          </pane>
          <pane id='8' x-axis-name='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:MeteredPower:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]' />
            </encodings>
          </pane>
          <pane id='9' x-axis-name='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[std:MeteredPower:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]' />
            </encodings>
          </pane>
          <pane id='10' x-axis-name='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:MeteredPower:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]</rows>
        <cols>([googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:MeteredPower:qk] + ([googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[std:MeteredPower:qk] + [googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:MeteredPower:qk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Power by Lamp over Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='readings (streetlightdata)' name='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv' />
          </datasources>
          <datasource-dependencies datasource='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv'>
            <column caption='Metered Power' datatype='real' name='[MeteredPower]' role='measure' type='quantitative' />
            <column-instance column='[MeteredPower]' derivation='Avg' name='[avg:MeteredPower:qk]' pivot='key' type='quantitative' />
            <column caption='Event Time' datatype='datetime' name='[eventTime]' role='dimension' type='ordinal' />
            <column caption='Geo Zone Names Path' datatype='string' name='[geoZoneNamesPath]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[geoZoneNamesPath]' derivation='None' name='[none:geoZoneNamesPath:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[eventTime]' derivation='Hour-Trunc' name='[thr:eventTime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]'>
            <groupfilter function='member' level='[none:geoZoneNamesPath:nk]' member='&quot;AMKO Taiwan/Abu Dhabi/Pilot Site Mussafah - Induction&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk] * [googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:MeteredPower:qk])</rows>
        <cols>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[thr:eventTime:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Temp vs Current'>
      <table>
        <view>
          <datasources>
            <datasource caption='readings (streetlightdata)' name='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv' />
          </datasources>
          <datasource-dependencies datasource='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv'>
            <column datatype='real' name='[Current]' role='measure' type='quantitative' />
            <column caption='Main Voltage' datatype='real' name='[MainVoltage]' role='measure' type='quantitative' />
            <column datatype='real' name='[Temperature]' role='measure' type='quantitative' />
            <column-instance column='[MainVoltage]' derivation='Avg' name='[avg:MainVoltage:qk]' pivot='key' type='quantitative' />
            <column caption='Geo Zone Names Path' datatype='string' name='[geoZoneNamesPath]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Current]' derivation='None' name='[none:Current:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Temperature]' derivation='None' name='[none:Temperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[geoZoneNamesPath]' derivation='None' name='[none:geoZoneNamesPath:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:Current:qk]' included-values='in-range'>
            <min>0.2</min>
            <max>2.75</max>
          </filter>
          <filter class='categorical' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]'>
            <groupfilter function='member' level='[none:geoZoneNamesPath:nk]' member='&quot;AMKO Taiwan/Abu Dhabi/Pilot Site Mussafah - Induction&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]' direction='ASC' using='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:MainVoltage:qk]' />
          <slices>
            <column>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]</column>
            <column>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:Current:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refboxplot'>
            <format attr='boxplot-style' id='refline0' value='glass' />
            <format attr='stroke-size' id='refline0' value='2' />
            <format attr='whisker-end' id='refline0' value='large' />
            <format attr='whisker-stroke-size' id='refline0' value='2' />
            <format attr='whisker-stroke-color' id='refline0' value='#555555' />
            <format attr='fill-color' id='refline0' value='#f0f0f041' />
          </style-rule>
        </style>
        <panes>
          <pane id='14'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:Current:qk]</rows>
        <cols>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:Temperature:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Temp vs Power'>
      <table>
        <view>
          <datasources>
            <datasource caption='readings (streetlightdata)' name='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv' />
          </datasources>
          <datasource-dependencies datasource='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv'>
            <column datatype='real' name='[Current]' role='measure' type='quantitative' />
            <column caption='Main Voltage' datatype='real' name='[MainVoltage]' role='measure' type='quantitative' />
            <column caption='Metered Power' datatype='real' name='[MeteredPower]' role='measure' type='quantitative' />
            <column datatype='real' name='[Temperature]' role='measure' type='quantitative' />
            <column-instance column='[MainVoltage]' derivation='Avg' name='[avg:MainVoltage:qk]' pivot='key' type='quantitative' />
            <column caption='Geo Zone Names Path' datatype='string' name='[geoZoneNamesPath]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Current]' derivation='None' name='[none:Current:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MeteredPower]' derivation='None' name='[none:MeteredPower:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Temperature]' derivation='None' name='[none:Temperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[geoZoneNamesPath]' derivation='None' name='[none:geoZoneNamesPath:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:Current:qk]' included-values='in-range'>
            <min>0.2</min>
            <max>2.75</max>
          </filter>
          <filter class='categorical' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]'>
            <groupfilter function='member' level='[none:geoZoneNamesPath:nk]' member='&quot;AMKO Taiwan/Abu Dhabi/Pilot Site Mussafah - Induction&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]' direction='ASC' using='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:MainVoltage:qk]' />
          <slices>
            <column>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]</column>
            <column>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:Current:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refboxplot'>
            <format attr='boxplot-style' id='refline0' value='glass' />
            <format attr='stroke-size' id='refline0' value='2' />
            <format attr='whisker-end' id='refline0' value='large' />
            <format attr='whisker-stroke-size' id='refline0' value='2' />
            <format attr='whisker-stroke-color' id='refline0' value='#555555' />
            <format attr='fill-color' id='refline0' value='#f0f0f041' />
          </style-rule>
        </style>
        <panes>
          <pane id='14'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear' />
          </pane>
        </panes>
        <rows>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:MeteredPower:qk]</rows>
        <cols>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:Temperature:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Temp vs Voltage'>
      <table>
        <view>
          <datasources>
            <datasource caption='readings (streetlightdata)' name='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv' />
          </datasources>
          <datasource-dependencies datasource='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv'>
            <column datatype='real' name='[Current]' role='measure' type='quantitative' />
            <column caption='Main Voltage' datatype='real' name='[MainVoltage]' role='measure' type='quantitative' />
            <column datatype='real' name='[Temperature]' role='measure' type='quantitative' />
            <column-instance column='[MainVoltage]' derivation='Avg' name='[avg:MainVoltage:qk]' pivot='key' type='quantitative' />
            <column caption='Geo Zone Names Path' datatype='string' name='[geoZoneNamesPath]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Current]' derivation='None' name='[none:Current:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MainVoltage]' derivation='None' name='[none:MainVoltage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Temperature]' derivation='None' name='[none:Temperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[geoZoneNamesPath]' derivation='None' name='[none:geoZoneNamesPath:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:Current:qk]' included-values='in-range'>
            <min>0.2</min>
            <max>2.75</max>
          </filter>
          <filter class='categorical' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]'>
            <groupfilter function='member' level='[none:geoZoneNamesPath:nk]' member='&quot;AMKO Taiwan/Abu Dhabi/Pilot Site Mussafah - Induction&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]' direction='ASC' using='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:MainVoltage:qk]' />
          <slices>
            <column>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]</column>
            <column>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:Current:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refboxplot'>
            <format attr='boxplot-style' id='refline0' value='glass' />
            <format attr='stroke-size' id='refline0' value='2' />
            <format attr='whisker-end' id='refline0' value='large' />
            <format attr='whisker-stroke-size' id='refline0' value='2' />
            <format attr='whisker-stroke-color' id='refline0' value='#555555' />
            <format attr='fill-color' id='refline0' value='#f0f0f041' />
          </style-rule>
        </style>
        <panes>
          <pane id='14'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:MainVoltage:qk]</rows>
        <cols>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:Temperature:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Temperature by Hour of Day'>
      <table>
        <view>
          <datasources>
            <datasource caption='readings (streetlightdata)' name='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv' />
          </datasources>
          <datasource-dependencies datasource='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv'>
            <column datatype='real' name='[Temperature]' role='measure' type='quantitative' />
            <column-instance column='[Temperature]' derivation='Avg' name='[avg:Temperature:qk]' pivot='key' type='quantitative' />
            <column caption='Event Time' datatype='datetime' name='[eventTime]' role='dimension' type='ordinal' />
            <column caption='Geo Zone Names Path' datatype='string' name='[geoZoneNamesPath]' role='dimension' type='nominal' />
            <column-instance column='[eventTime]' derivation='Hour' name='[hr:eventTime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[geoZoneNamesPath]' derivation='None' name='[none:geoZoneNamesPath:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]'>
            <groupfilter function='member' level='[none:geoZoneNamesPath:nk]' member='&quot;AMKO Taiwan/Abu Dhabi/Pilot Site Mussafah - Induction&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:Temperature:qk]</rows>
        <cols>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[hr:eventTime:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Temperature by Lamp over Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='readings (streetlightdata)' name='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv' />
          </datasources>
          <datasource-dependencies datasource='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv'>
            <column datatype='real' name='[Temperature]' role='measure' type='quantitative' />
            <column-instance column='[Temperature]' derivation='Avg' name='[avg:Temperature:qk]' pivot='key' type='quantitative' />
            <column caption='Event Time' datatype='datetime' name='[eventTime]' role='dimension' type='ordinal' />
            <column caption='Geo Zone Names Path' datatype='string' name='[geoZoneNamesPath]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[geoZoneNamesPath]' derivation='None' name='[none:geoZoneNamesPath:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[eventTime]' derivation='Hour-Trunc' name='[thr:eventTime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]'>
            <groupfilter function='member' level='[none:geoZoneNamesPath:nk]' member='&quot;AMKO Taiwan/Abu Dhabi/Pilot Site Mussafah - Induction&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk] * [googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:Temperature:qk])</rows>
        <cols>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[thr:eventTime:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Voltage by Lamp'>
      <table>
        <view>
          <datasources>
            <datasource caption='readings (streetlightdata)' name='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv' />
          </datasources>
          <datasource-dependencies datasource='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv'>
            <column caption='Main Voltage' datatype='real' name='[MainVoltage]' role='measure' type='quantitative' />
            <column caption='Power Factor' datatype='real' name='[PowerFactor]' role='measure' type='quantitative' />
            <column-instance column='[MainVoltage]' derivation='Avg' name='[avg:MainVoltage:qk]' pivot='key' type='quantitative' />
            <column caption='Geo Zone Names Path' datatype='string' name='[geoZoneNamesPath]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[MainVoltage]' derivation='None' name='[none:MainVoltage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PowerFactor]' derivation='None' name='[none:PowerFactor:qk]' pivot='key' type='quantitative' />
            <column-instance column='[geoZoneNamesPath]' derivation='None' name='[none:geoZoneNamesPath:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[MainVoltage]' derivation='Stdev' name='[std:MainVoltage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:PowerFactor:qk]' included-values='in-range'>
            <min>0.896</min>
            <max>0.99985</max>
          </filter>
          <filter class='categorical' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]'>
            <groupfilter function='member' level='[none:geoZoneNamesPath:nk]' member='&quot;AMKO Taiwan/Abu Dhabi/Pilot Site Mussafah - Induction&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]' direction='ASC' using='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:MainVoltage:qk]' />
          <slices>
            <column>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]</column>
            <column>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:PowerFactor:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refboxplot'>
            <format attr='boxplot-style' id='refline0' value='glass' />
            <format attr='stroke-size' id='refline0' value='2' />
            <format attr='whisker-end' id='refline0' value='large' />
            <format attr='whisker-stroke-size' id='refline0' value='2' />
            <format attr='whisker-stroke-color' id='refline0' value='#555555' />
            <format attr='fill-color' id='refline0' value='#f0f0f041' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]' />
            </encodings>
            <reference-line axis-column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:MainVoltage:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline3' label-type='none' probability='95' scope='per-cell' symmetric='false' value-column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:MainVoltage:qk]' z-order='1' />
          </pane>
          <pane id='11' x-axis-name='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:MainVoltage:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]' />
            </encodings>
          </pane>
          <pane id='12' x-axis-name='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[std:MainVoltage:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]' />
            </encodings>
          </pane>
          <pane id='13' x-axis-name='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:MainVoltage:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]</rows>
        <cols>([googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:MainVoltage:qk] + ([googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[std:MainVoltage:qk] + [googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:MainVoltage:qk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Voltage by Lamp by Hour'>
      <table>
        <view>
          <datasources>
            <datasource caption='readings (streetlightdata)' name='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv' />
          </datasources>
          <datasource-dependencies datasource='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv'>
            <column caption='Main Voltage' datatype='real' name='[MainVoltage]' role='measure' type='quantitative' />
            <column-instance column='[MainVoltage]' derivation='Avg' name='[avg:MainVoltage:qk]' pivot='key' type='quantitative' />
            <column caption='Event Time' datatype='datetime' name='[eventTime]' role='dimension' type='ordinal' />
            <column caption='Geo Zone Names Path' datatype='string' name='[geoZoneNamesPath]' role='dimension' type='nominal' />
            <column-instance column='[eventTime]' derivation='Hour' name='[hr:eventTime:ok]' pivot='key' type='ordinal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[geoZoneNamesPath]' derivation='None' name='[none:geoZoneNamesPath:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]'>
            <groupfilter function='member' level='[none:geoZoneNamesPath:nk]' member='&quot;AMKO Taiwan/Abu Dhabi/Pilot Site Mussafah - Induction&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:MainVoltage:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:MainVoltage:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:MainVoltage:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk] * [googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:MainVoltage:qk])</rows>
        <cols>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[hr:eventTime:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Voltage by Lamp over Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='readings (streetlightdata)' name='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv' />
          </datasources>
          <datasource-dependencies datasource='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv'>
            <column caption='Main Voltage' datatype='real' name='[MainVoltage]' role='measure' type='quantitative' />
            <column-instance column='[MainVoltage]' derivation='Avg' name='[avg:MainVoltage:qk]' pivot='key' type='quantitative' />
            <column caption='Event Time' datatype='datetime' name='[eventTime]' role='dimension' type='ordinal' />
            <column caption='Geo Zone Names Path' datatype='string' name='[geoZoneNamesPath]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[geoZoneNamesPath]' derivation='None' name='[none:geoZoneNamesPath:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[eventTime]' derivation='Hour-Trunc' name='[thr:eventTime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]'>
            <groupfilter function='member' level='[none:geoZoneNamesPath:nk]' member='&quot;AMKO Taiwan/Abu Dhabi/Pilot Site Mussafah - Induction&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk] * [googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:MainVoltage:qk])</rows>
        <cols>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[thr:eventTime:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Voltage vs Current'>
      <table>
        <view>
          <datasources>
            <datasource caption='readings (streetlightdata)' name='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv' />
          </datasources>
          <datasource-dependencies datasource='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv'>
            <column datatype='real' name='[Current]' role='measure' type='quantitative' />
            <column caption='Main Voltage' datatype='real' name='[MainVoltage]' role='measure' type='quantitative' />
            <column caption='Geo Zone Names Path' datatype='string' name='[geoZoneNamesPath]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Current]' derivation='None' name='[none:Current:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MainVoltage]' derivation='None' name='[none:MainVoltage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[geoZoneNamesPath]' derivation='None' name='[none:geoZoneNamesPath:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:Current:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>2.75</max>
          </filter>
          <filter class='categorical' column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]'>
            <groupfilter function='member' level='[none:geoZoneNamesPath:nk]' member='&quot;AMKO Taiwan/Abu Dhabi/Pilot Site Mussafah - Induction&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]</column>
            <column>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:Current:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:MainVoltage:qk]' field-type='quantitative' max='260.0' min='220.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:MainVoltage:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:MainVoltage:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:MainVoltage:qk]</rows>
        <cols>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:Current:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <datasources>
        <datasource caption='readings (streetlightdata)' name='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv' />
      </datasources>
      <datasource-dependencies datasource='googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv'>
        <column caption='Geo Zone Names Path' datatype='string' name='[geoZoneNamesPath]' role='dimension' type='nominal' />
        <column-instance column='[geoZoneNamesPath]' derivation='None' name='[none:geoZoneNamesPath:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='8' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='6' type='layout-basic' w='90671' x='0' y='0'>
              <zone h='50000' id='3' name='All Averages' show-title='true' w='45336' x='0' y='50000' />
              <zone h='50000' id='4' name='Voltage vs Current' show-title='true' w='90671' x='0' y='0' />
              <zone h='50000' id='5' name='Power by Lamp' show-title='true' w='45335' x='45336' y='50000' />
            </zone>
            <zone fixed-size='160' h='100000' id='7' is-fixed='true' param='vert' type='layout-flow' w='9329' x='90671' y='0'>
              <zone h='15496' id='9' name='Power by Lamp' param='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]' type='filter' w='9329' x='90671' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='48'>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='All Averages' />
        <viewpoint name='Power by Lamp'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Voltage vs Current'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
    </window>
    <window class='worksheet' name='All Averages'>
      <cards>
        <edge name='left'>
          <strip size='239'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card mode='checkdropdown' param='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]' type='filter' />
            <card pane-specification-id='2' param='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:eventTime:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[:Measure Names]' show-morefewerbutton='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]</field>
            <field>[textscan.42047.810988761572].[:Measure Names]</field>
            <field>[textscan.42047.810988761572].[attr:id:nk]</field>
            <field>[textscan.42047.810988761572].[hr:date:ok]</field>
            <field>[textscan.42047.810988761572].[mn:date:ok]</field>
            <field>[textscan.42047.810988761572].[none:date:qk]</field>
            <field>[textscan.42047.810988761572].[none:id:nk]</field>
            <field>[textscan.42047.810988761572].[yr:date:ok]</field>
            <field>[textscan.42376.965418900465].[none:eventTime:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Voltage by Lamp over Time'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42376.965418900465].[none:geoZoneNamesPath:nk]</field>
            <field>[textscan.42376.965418900465].[none:name:nk]</field>
            <field>[textscan.42376.965418900465].[yr:eventTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Voltage by Lamp by Hour'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:name:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;P20&quot;</bucket>
                </multibucket>
                <axis>[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[avg:MainVoltage:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[textscan.42376.965418900465].[none:geoZoneNamesPath:nk]</field>
            <field>[textscan.42376.965418900465].[none:name:nk]</field>
            <field>[textscan.42376.965418900465].[yr:eventTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Current by Lamp over Time'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42376.965418900465].[none:geoZoneNamesPath:nk]</field>
            <field>[textscan.42376.965418900465].[none:name:nk]</field>
            <field>[textscan.42376.965418900465].[yr:eventTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Voltage vs Current'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42376.965418900465].[none:Current:qk]</field>
            <field>[textscan.42376.965418900465].[none:name:nk]</field>
            <field>[textscan.42376.965418900465].[yr:eventTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Power Factor by Lamp over Time'>
      <cards>
        <edge name='left'>
          <strip size='257'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[textscan.42376.965418900465].[none:geoZoneNamesPath:nk]</field>
            <field>[textscan.42376.965418900465].[none:name:nk]</field>
            <field>[textscan.42376.965418900465].[yr:eventTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Power by Lamp over Time'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[textscan.42376.965418900465].[none:geoZoneNamesPath:nk]</field>
            <field>[textscan.42376.965418900465].[none:name:nk]</field>
            <field>[textscan.42376.965418900465].[yr:eventTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Temperature by Lamp over Time'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[textscan.42376.965418900465].[none:geoZoneNamesPath:nk]</field>
            <field>[textscan.42376.965418900465].[none:name:nk]</field>
            <field>[textscan.42376.965418900465].[yr:eventTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Temperature by Hour of Day'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[textscan.42376.965418900465].[none:geoZoneNamesPath:nk]</field>
            <field>[textscan.42376.965418900465].[none:name:nk]</field>
            <field>[textscan.42376.965418900465].[yr:eventTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Driver Temp by Lamp'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[textscan.42376.965418900465].[none:Temperature:qk]</field>
            <field>[textscan.42376.965418900465].[none:name:nk]</field>
            <field>[textscan.42376.965418900465].[yr:eventTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Power Factory by Lamp'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[textscan.42376.965418900465].[none:PowerFactor:qk]</field>
            <field>[textscan.42376.965418900465].[none:Temperature:qk]</field>
            <field>[textscan.42376.965418900465].[none:name:nk]</field>
            <field>[textscan.42376.965418900465].[yr:eventTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Power by Lamp'>
      <cards>
        <edge name='left'>
          <strip size='257'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[textscan.42376.965418900465].[none:PowerFactor:qk]</field>
            <field>[textscan.42376.965418900465].[none:Temperature:qk]</field>
            <field>[textscan.42376.965418900465].[none:name:nk]</field>
            <field>[textscan.42376.965418900465].[yr:eventTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Voltage by Lamp'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[textscan.42376.965418900465].[none:PowerFactor:qk]</field>
            <field>[textscan.42376.965418900465].[none:Temperature:qk]</field>
            <field>[textscan.42376.965418900465].[none:name:nk]</field>
            <field>[textscan.42376.965418900465].[yr:eventTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Temp vs Current'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[textscan.42376.965418900465].[none:Current:qk]</field>
            <field>[textscan.42376.965418900465].[none:PowerFactor:qk]</field>
            <field>[textscan.42376.965418900465].[none:Temperature:qk]</field>
            <field>[textscan.42376.965418900465].[none:name:nk]</field>
            <field>[textscan.42376.965418900465].[yr:eventTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Temp vs Voltage'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[textscan.42376.965418900465].[none:Current:qk]</field>
            <field>[textscan.42376.965418900465].[none:PowerFactor:qk]</field>
            <field>[textscan.42376.965418900465].[none:Temperature:qk]</field>
            <field>[textscan.42376.965418900465].[none:name:nk]</field>
            <field>[textscan.42376.965418900465].[yr:eventTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Temp vs Power'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[googlecloudsql.04841mr0r1my1i1h0mt8z10ct4qv].[none:geoZoneNamesPath:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[textscan.42376.965418900465].[none:Current:qk]</field>
            <field>[textscan.42376.965418900465].[none:PowerFactor:qk]</field>
            <field>[textscan.42376.965418900465].[none:Temperature:qk]</field>
            <field>[textscan.42376.965418900465].[none:name:nk]</field>
            <field>[textscan.42376.965418900465].[yr:eventTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='All Averages' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29Z5AcaXqg92SW9669QzuYgZvBzGAHnNnlDne5t/ZuV8clebw4XQTFCCl4
      f6Qfun8K/bnQH4UYcfohiSfF8Ujecck9kkuzSy5nuW5mxwCDwWDgbXtf1eVN+kz9yKrqqkY3
      0I2pbpjOBwGgsvKzWd+bmd/7ve/7CZZlWTg4HFDcAI4MOBxU3I0PkiTtT42WydT0LFqtRCTZ
      RaGiMj7Sj67rBAKBjlVjmiaiKHasvL0os9PlWZaFIAgdKw+e/z67AQRBIBgMdqxRD2P+7jWu
      3rjF+GA/s1dvkBocJpFKIddqHW2Druu43e5HJ9whlmVhGEZHy+x0Gw3DQBTFjgnBs9JnQRAe
      W6g615IdMnLkFF+MdlPKphmdnCBfVujsfdrBYefsuwAA9PX10dfXB0B//5NogYODjXPzdTjQ
      7PsTYGHmDplchUKxQioVw+WPcPLoxH43w8EBeAICEAiGSF+/heALs16SiWgGkiShqiper7dj
      9RiG0bGywJ4QmqbZ0TI73UbTNDFNs6OT4Gehz4IgPHY7hf1eCCvl17E8AaRKhUjQiy76iYUD
      1Bwt0KfG0QLtnj19ApiGRqFYJZ6IIdZ/lGiiC4BYOLSXVTs47Ig2sVlfnGYlk2ZpNY9hGGia
      iqpqLC4sousGmqqi6zqGaaFrGoX0Iovp4raFr0zd4G/+9vus5Gp73hEHh8eh7QlQSKdZVhZZ
      updj6MQgldV5qoUaaiDFQOIGczOrhFLdfPVLv8JHH7xDbj3D2S//xraFR1L9DPav4fO49rwj
      Dg6PQ5sApAYPkXS7GOguU5JVxl/6DKYik6/phMNBupK9BOJdhAJ+BgeHGJ04QjK03cTVZHbq
      Hiura2jGxgRlfuYekmZRKVVJpSLgCTM61LeXfXRw2JY2AfD4PMwupZk8cgy/Z+PtaLj+vyan
      UAU/CAKTx048omiBZDJJILiCS9yYlCUTCe7cukVRNsjVVOLBAr2pmKMF6gCtWqAfXFvlG6c+
      3Y1lt322LAvdtPC4NsbOu/ezfHYy1Tx+2rRAbQKwMn2X9YpK+r0c2VKFka4AojeMYVoolXWU
      qkRNDDExeYRTR0cfWXgwmuTk8RfaXoHW1tL0DI/jK5RIJUKY7hCBQADLsjqqHQCeCi3Q+1Pr
      eF0iiZCXpbyESxToi/nJV1WqssZ4T4S1kkzA6yJXVemN+nGJAqtFGcO06IvZx2slGc2wGEoE
      yFdVNMMi6HWhGSYRvwfLsqgqGvGgl+n1Gv/vOzMcH4jhEgWyFZWyrDHaFSJfVbEAURCI+N24
      BIF8TQUgGvAQ9Xu4vlxkOBHELQpkKzJlxWAkGaQoabhEAVU3cYkCiZCXQk1DM0zcooBLFPje
      5SW+drKfyZ4wSwWJP/pgnt5YgIjfzVAi2PHf5fufLNEXDxDyulkryUT8bqIBDwCLeYmo300i
      5EXTTZYKUts1KNa0djXoytRdzHCE9NIaoj+IWcsiuEMYQMgL62sZAskeXG4/L504/IimWcze
      u8Pc4iovfuaXiId8D039vKpBv/h7b9MV9nJuPMWfXZwn4HHxzZcGOT+dZSFf4/WJLhZyNUaS
      Qd6bWmc4EeTceIq/+WQJSTMYTYU4N57i766ukK+p/Ktzhzg/naUgaYymQhRqKicGovz5pUWO
      90c5N57ip7fTTGUqnBqMcW48xTt3M9xYKfG7n5/g/HQWw7TwuUV00+K18RQfzmRpVYZ/NJfn
      zHCcNya7OD+d5ZOFAr/9xhiX5/MEvS6yVZWAx8W58RR/8O4Mw8kgEb99Xe6slemN+PnKyT7O
      T2eZylT48ok+TAvOjibIlGXiQR99UR+fLBQQRYHj/VFKss5irkbY7+al4Th31yqUJI1U2Isg
      CHhdIndWS+imxcuHEqRLCssFiatLRRTNoCzrLORrHO+PAnB6KMafXJhvvwbLJX73zY1rcHm+
      0P4E6J84AsBg7zYGOsd389NbKKrG8MRhosHOvdo4dJ5ri0VODsb2tI7pTIWqonNtqUhPxMe5
      8RT/9aMF3C6BgZhtBr9ckDAsi19/ZZjz01nWSgqnh2KslWQme8K8dWOVie4wHpfID6+vki7L
      HO2NfKp27eE6gMjRE6f2rniHjlFVO/te/iyx76YQxcwSOclkfS1DV10LNDb8/JuEzmarD3wu
      1jQK9ffvnebVTftdJV2S6Y36H6ve+VyNie7wjvPqhsVifndrObmq3a+KorNeUXaVt9FH07Ie
      21txNruz9u6/ObSlsTg9h2aaFCWNWLBIX1f8udQCfefDBcD+EVcKEpYFFrBSsL3vqqpBSdIA
      +8fGaq/Hqh+vFCQs7IFwcSYLQL6mIau6nddsz2tZVnveetmNetNlhdGUPd+ymnW1D7RGXgDD
      skiX5Ob3jb+maWLZPdzIb9nHd1ZLAMiaSb4uDJZltuVtpq/ntep9bvRxPlejL+pr9tFquz5W
      e16r/bh5vZvtrAtV4/rU/+y7AIRi3Rw9EWY9s04qEcJwPb9aoFxNA4SmbY4ggABttjqNz2L9
      ZKtdiyBsnBcQ2tK35RXb8wqC0J63pezNeYVmXe32Q3YZW6Svf9+sq962Zlph03FbXrEtbzN9
      s4/tfd7cR6Ht+rT3aXMfW6+B3c5GOfU2WHY7910A3L4QPd0herq79rtqhw5gYb8S4XnSLdk5
      rQuxm3mqHGJqqm1npGgGtfrjfaf5dpP+cdrViqqbaIaJtMXksabqKLqBvsPXpauLti3VSlEm
      XbLflR/2g7WiGfZjXa+/Huwmb6Peq4uFHaVvIKkGN1fs15ts9dHzl1ayVaU5l5hZrz4idTuZ
      skJF0Xec9+5aGUmzf59Lc/nm95v7+0RcIrciW1H4j+dneG0syb10hYV8jZMDMXqjfqqKzo9u
      rnJmJMFoKsStlRJlWWO8O0wy5OWduxncLpEvn+hlPldjpSAT9LoY7w4DFj+8vspkT5jj/VEu
      zxcoShpjXSESIS+z61U0w+SVQwmyVZWVooxpWhzpjeD3iHz34gJdER+vT6SYyVSbOvATg1Gu
      LxVxiSJHe8PIuklJ0riXtvXvqbCXv72y3Hz0bkfjR9IMszn5a/3BHsbH83leG0tyZ7XcHBw7
      zduodysh3in31sq7Sq8bVlNo1+pzip1SlDRkzdxxXkXf+kZQ29Tfp0YA7qUrvHVjlaDXxaW5
      POmygqKZTR3wR3N5CjV7wlioaayVZI72RTjcG+bqUpH5bI2o382luTySZpAKeXn7boYzIwl+
      eH2VM8NxJNXgw5kclxcKvHoowSuHElyay3NhJsfvvjnBx3N53KKAopucn85ybjzFz+9mON4f
      ZSpdAeDaUpGJ7jCCAJfnC1xdLPK1U30s5iUSQS8z61Vm16ucG09RlDTiAWcN5GmmGRhr3+IC
      bUPYbfHGaARTUzgzEKQoeRhO+hgIi/RGvXxuNEpfzFb7VRWdouRlIB4ATM4OhRiLu5t5Fd0k
      7HOhGRajMRe/MhFjrCvYPJ/wWUx0bxyH3QZW/bMo2K8WLlFgOOriCxMxBhMB3C4RLIuUH3qj
      vra83QGB7kCQoNdFdwBCPjfDURefG40S8rmI+O0X5sGIC69LJB60j8MuAwQ43BOsXwOj+bmQ
      8KDqJj0RWwtSlj1UFX/zGoTd9p2sNe9kdwAEAVU3GI66GEna5zTDpCcoMNYV3CavyWRPsPms
      inpMRlNBe3JtWYTdsWbaze3sDkAq7CNQN3fpDQrEAh5CPvcDaRt9PtxrHw9HXbgE26QC4FDM
      jWlZdIV9W+dtOW6Mgf6YbZsmqwbjiQ1zi8193HwNTMsi4bP23yNsdXEWMZBA1BUMS8V0Benv
      Tj63phAPw/EI+/Q81R5hWxEMhZiavsfd29NMnpokFEjQnYhiGEZHrS07bb35gP66Q2V2srxG
      WZ2MDve097lx/+6INeh+MDc7S6pvkBcEN6FwGNWgZeGncw+jxoDtNJ+mzD96f5YXh+MMJ4Ok
      Qt6Ot1EzLCzDwL8DByTNsBexvK6H3zk70cZK3QYo6vcwHPcTDdp1/uRWmi++0NNME/btbjjW
      VANRsPjTDxfoiwX46skN8++f3EpzbiJF0Otqvto16rizWmYwEWC9ouy/AJw6cxaAkcGBtu91
      Xcfl6pznmGVZHS/vccssyRq3lktMZ2skw35SYT/ZapWFXJUvvNCLpBq8dz/LV+o/YEXRyVdV
      bq+WOdoX4d5amXRZ4Run+6kqBpmyzKmhOGAPZMO08Htc3FosMbNeQdJMvvXSAIt5yV5tD3hY
      Lcp87nAXbpfI7dUSxZqGblrU6oqB//nLtiGkqpv85aVF/vXro9xbKzPRFcTlcrFWkhHrptOX
      5vL85tlhaqpB2Ofm5nKJw73hph+AohvcWS1TVXRyVY3x7hAXZwvMrFcZ7w7xP/2qXdcni0Us
      BE4PxfjuRwvEAx5+4+wwLlFAUg3iQS//7gc3eX0ixRdf6OWDqSynBmOE/W5urZT4D29P8Ztn
      R1gqKvz4dgZZt/jmSwN4XCI/uLbKnXSFl0cSiILAzZUS2YrC2dEkl+bymHXfhadGC/Q88p/e
      m2E6U+Xrp/v5kwvzzKxXcIki56ezrBRlVooSH87YWitVN1kpSpwYiOFzi/zk1ho11WAg7ue9
      +1lurhRZK8mcHU2ykKvxpxcXeKEvwmhXiOtLJRTdwOd2IWsGP72d5uJMjq+c7KOq6Pz+tRW6
      wj7emOzi9350h4/nC3ztZB8Wtn79//vFNF841s10Xc17P13hzWM1/u+fT/HPXuxnPicx1hVC
      AK4sFnl/ap1/+uIA37kwx7987RDfuTDH1073U6xp/Jfzc/zO58brT7sYb11f48snepvqz6lM
      lYVcjZWizA+urvCLe+v8d58dI1NWqKkG/+4Ht+iN+ljMS5QkDdUwGe8OMZWp8IOryywXJF4a
      jvN/vHWHG8slTtdvBABv3VilK+zl5nKJhXyNX9zLcHeyzHh3GFU3ubFcxOMSUXSTa0sFROEJ
      rAQfJIqSxvWlIsf6I6RLMpmygqIZzYWciqJTkLSmP8D3Pl7iw5kcb0x2kS4rvD+VJRX2cnet
      TK6qMbte5cpCkaN9Eb5zYZ7/8YuH+fGtNBPdIX5+N8NwIshLw/aASJdl/vyjBY70RZA1g3RJ
      5qe303w0l+eDqSyjqSARvwev275rT2WqZMoK0+sVfnIrzXAyyGpR5t37WWYyVYqShmVtLCT9
      4801qorBV/79O0T9HlJ1zc2NlRLnp7PImsFHs3mmMhUuzNhar96on+tLRRbzEuens2iGSUFS
      mV2vcj9dYbkgcXY0yQdTti3QhZkcr40lSZcU/uDdGd66scr9dIWBeICFvISsG7x1Y5XDvWFM
      yxbm/+fnU4C95qDoJumywnh3mEyLQd7VxQKGaRv4PVUrwc8jJVlvrvACXF7YWIk0TAvD3Hi/
      zlYVclWVTNlOr+gG56dzaIaJadqLSDVV5/L8xmKXXF/QypQVZM3YdgEI4JOFgm04B9xPV9rK
      adSZLiltZUylK0iaQUnSm99LqsH3Pl4EbIvW1vIBlHqbDNNqLu7tlKlM5ZHfKXr7Yta9tQoV
      Wd8yb2s/pjLtK8iZ8hOYA0jVMrh8uAQLyzIwBQ8B3zNkWPIYtA4oRTOg7rK3VvdqehiNAb4V
      jR9cNSzbmhTaBvVmHnbugXa2DDLVsF8fAIJeFxb2XGG7tm4eaA+0YyHfNlhbbwqZisJwol0d
      nikrxAIbY+Ty/O7MN1rL2cyePgGyS9P87Kdvs96ydF0uF7ly9Qo//uE/cvn6da5eu7aXTXgq
      eNTA28xUprKjO+H5aftV4d5amaqytaDkqqrt/rfw6EHT2s5PdjnILi88+DTZjKQZlGUNRTPb
      0igPEfJOsF17YJMa1DIU3nnvEidPHMXUZVZXsxw5eRqhtMBPb2TQiyu8fOoFcnkZb1gkGuul
      ryuxfc0CzC0s8OJnzjW/Wl2YIxLtopjOgmXhDQSf29igDbv1DZv1hs37xmtBU4/dYs/emC80
      7NmxSyFTVon6N36y9YrKeNeDZVmWRbai0hv1MbdeRdNNFM3cst6GP8BaUXrgfKP+VlWopBrc
      WilxZjjOx3O5pj+A3LCxsTb5B7TUVayprFfUpk1+M/0mf4Atr0+LP4Ck6o2KtvUHaG3//XS5
      6Q9wb620vT/A8ux9FLnK3alZtPIq6wWL7oljJEyTQnoRry/A/Ts3mV0oM3B0kFRJf6gAuNw+
      BnuTKC0GSKfPvgHAiWNH29I+j/4ADbv13foDbJx7uD/A5uNWW/ilgkQy5N2w63+EP8BMtvbA
      eUEQ0EyLG8slXh6xf2cLe71BEARUw9qVP0CDK4vF9vQ78AeYz0vkayqCEObKYrFR0bb+AIsF
      CdUwH7h+2aq2vT9A9/BhvjR2DFXVsMyjXPzoChGvgDcwyD/7Sg+iy4WuKrzyuguX24UoPOwN
      ymRxcRnRE8Dvc+bazyqWtWF23SkeNlHfDt0w2c18utAyOX8YbSNzbWmRWjXPynoJRZdx6QI1
      qUZFVpFrFQxNRXB7CYWC+H0+vN6HTV5F4uEgi0tz1OSD63T9KB53QufQGdqeAF0JH3//k0sM
      DiRYmMkzd3cdIe5m7f498IaQLQ8jQ4O8fvalHRRtUlFUXnzpLF07cN4+qKh1B5aKolPbZiLr
      sHe0CYA/NsBrr0I05KVQG+DQoI4mWAy+1sWF9y/w2mfPEgjs3GLT4/GSTufsVUonQO5DyVVV
      CtLOHtsOnaNNAARBYGhoEIDoprntyKHxXRYtMDJxhIlj7a9Jc1O3Wc2WKWSzhMJ+ekeOcPjQ
      wDZlOOw1u1XRPm/s4UKYgMfz4BxBqlZIpLpQayUiiR5WlhYZ6kkcWDUobK32a6ZvUYNuPr9d
      3lYVYPP7bdSLDR38VuW2frVdvduFRdmuTw8c71AN+uDxw9WgD7bTeuD4iYRFGR4/iuDyMNDX
      g9ftwhJc+LyeA6sGha3Vfs30j6kG3WlYlIcd7yT946hB2453qAZ98PjhatAH29l+/Z5YWJRQ
      +NPFcnToDJfm8rxy6CGLmAcER0F/QNmtkdrziiMADgeafX8Fmp+5y+JqjmIuR1dPF4I3xKsv
      Pmq3GQeHvWHfBaBWLhFLdmHIVUo1hbDwfJtCOzzd7LsAjB4+DqKL8ZEhPG4RS3AdaGtQ2F7t
      t5dq0IfV21rGw87b7Xq21aCCZbOvgbFqpSwV3UvYo7GQLnN04hCyLOP3d85kwjCMjjvFm6a5
      qzJlzUAzzOYm4YZlW082jhXNDgTgrm8iqJtW87Np2T+ZS2g5tmhuONiYxLbmFbHqaj4B07Ka
      aS1s7yz3Q/K6WzYy1M2NvHZoceGB841jw7QQ62rXxrEgCDSSby5b0XR8HnezT7Rcj83HW7Wr
      7fpYIGzT58193HwNmsdg60Y7GZTqUdTyixQrFpqapVQ18Nfrft4CYwWxXQ+jATvP+ftZBuIB
      BuJ+lgsyEZ+IolgIgtWM0tAb8aEYJlPpCkGvm5eGY3jcImVJp1BT6Y8HKNY0KorR3EQv4BG5
      sVIi4BE5ORQjW1G5sljkUH0PgFI9FupaWQVBoCxrDCeCyAaEvC4Uw+DyYomXhuNkKgr31yp8
      9nAXWPDxQo7jAzFEl4uaarBSkOiL+SlWNcR6VLd0SUYUBXJVldNDMXoi29/IPprNMtnjp6Lo
      VFWDo30RVN2kpuqohrlt3u9fWeafvjjQdPucytgRHz5tYKx9jwwHoEpFMgUFDworeZkXjx9+
      biPDffH33qYv6uPV0SR/dnGegXiAXz7cve0meWOpEIOJIB/OZJE0gzMjCY72Rvi7qysgwNdP
      9Tc3yfO7RfweF30xP/9wfZWXhuNMdIe5tlRkKlPhl490c7Q3wjt3MywXZf7F2eGHbpLXHfGR
      KSt8NJfnC8d6ON4f5cJMlquLRf71L41uuUneH70/y0A8wEgqiG6Y9McC9Nb76xIFVooyumFy
      pDfCB1NZlgsSsaAHy4K/+WSJb78yjGHagYEvzOT48ok+JrpDGKbF968s89JIgljAw9XFApdm
      8/zaK0MUJI1cVSUV8hILeOiN+pveZn63C1EUODEQ5V66wunBGDdXSqwUba/EnogPy7JYKcp2
      yMuOjZBd4A3EGLT3RaPn+d8dqU3nnt8mpHhZ1qnIOrppMdeyrVFr+s1557I1jvZFWC3KTRv7
      VrfJtrybtmJaKcp01+OOVhWDoNfV5jq4sasLbY77pmV7hQU8LlbqW7m2pv9obpmBWADNsLi9
      WiJbUTnaF+G7FxfojfrbNslTdJPvfjTf3CRvpSDxh+/N8M9fHuLDmRxrJRnTohkgebko8daN
      Vc6OJrk4k2O5KPHtV4b4YDrLfLbGclHiaG+ERMjLndUS//WjRU4ORnn1UJJrS0VuLBf5F2dH
      mjeBgqQ56wBPmouzOcAeoCV57/Y42MxcfQ+tj2ZzXFsq7jifrBncq0fKbhXUVhpCUahpbXuU
      1VSdYt3idaW49ZzTaHER3WqtzjAtVopS86ZybbHYFL7NwqgZpr2ZR/27fLXd2nYmU3UE4Elj
      bPUrP6f1l2W9uXne3A43sWswnamyXtl53uvLpeZeAHdWN/YxaP0MzkqwwzOCucupqtn62lnb
      /lXQEQCHA82eCoBlmlQqVfZfz+TgsDP2VACW7l/lL/7yr1jaZrL0vPNXl5e2/L6xn9d+0Bp5
      7lFR6LZDM8yHhh18VL2PS1FSqe7h5oewxwIQSfbSlYoT9B9Mf+DttCTXd6F1gU8nMPO52gOf
      766Vm9qWh/HhjK2hMi2aG3rvtt6ipLFc2N2GeLfrm2znaxqVPdaMtUeGs3QuXbrGsWOHwTLJ
      ZXP0j4ziMmp8/MlNunt6iUbDqKqKpmm4XS78AT/lqkwmvcbLZ1qjRZgsLyxQLpXbQ9+ZGj99
      6y1GTn6Gtfsfkxg+wfHJ4T3t5NPAp7kjtgpMuQNPj52qW3c78dyKRkDf3bDTmD6doE0AsotT
      LCytYggCcmaKohYhPDBKqJbHHe1FqK3x7pVP0P1JuoMaxfUspqkjRIaIRjY/TASCwQCCy4Wr
      bRcS+6JKtSrDY4eZXV5FGux67o3h5rLVB4zhyrKOAAzENpb/H2UMd70entyq2wo5xnBb97Hx
      1NyVT7AvPsC3vjFKsViFyUP8/MfvYClVvLEBuoozRLuOc9IbI5zowesCuVrC5QsgiB5M40Gp
      jad6eeGYjqfFoAnRy5tf/hqCIGBZFkMj44iicCB9gsv1O/Hj+AQLgrBtmMWd+AQ/rN6NMp5d
      n+CbK+VN7dyBT3AkYvvrxpP2Evm3fu2bzXND9bAo0YnDze9isRjbY5HOpJFrir3dZgsNw6VO
      bubm4PA47Okk2DQMIsluwn5ns2iHp5M9NIYTOXryxb0r3sGhAzgrwc8oNVV3Ijt0AGeTvGeU
      hdz+efA9zzhPAIcDjSMADgeaJyAAFqvLi6i6SbmwTq50MO2EHJ4O9n8OYCpM371HpmqgldYx
      LIvkq6/uezMcHOBJCIDgwet1Ew34kDQflie0701wcGjgBnuZfz/jAh1/6RX7QzIKQK1WQ5Z3
      ZzH4KJ6GuEDdfjje4yPqt6PfRdwmXrdIImgvDOqqHQVjMrlx3Pjc5bc3k+uN2sc9QYGK7GIg
      /ui8im4QcQcZqx9rholPCDKRfHReAEsLMpHybsTn2XS+9dhDgJ6Il0A91o9fCBAPegn73I/M
      G/OYuESBZMg+TvgsTNOiO7J1u1qPKyGR/pDAUMI+llSRlN9iZLs+broGpmUhGMEnExZlbf4O
      RStO3FXh7nKZV04dRVEUwuFwx+p4GgQA7MEHdrAnw7RAsINdmQ3bIpe987qAbXbcsA6x6v8I
      gp23NTCW2TQAa0lvgWWZ9s6dwsa57fI2aJxv72vDJgcM3UQQxaa91ua8diCsB/O21tvIKwB6
      /XdpXg/a+wAb7bSwJ6kWttmMWa+rtWyhbuZm25ZtlLVd+s3X74msA0SiYdZWZUp6CVVV8QUC
      z6UxHMCX/8+36Qp7OTee4s8uzhPwuPjmS4PbxgUaTth3rrWSjKQZjKZCnBtP8XdXV8jXVP7V
      uUPNuEBrRZmjfbb91oWZHK+NJQGoqQZTmQqnBmOcG0/xzt0MN1ZK/O7nJ7aMC/Sf3p3h+EC0
      2eaP5vKcGY7zxmQX56ezfLJQ4LffGOPyfB6fR2QhJ9ET8XGsP8r3Li0ynAwSqW/gfWetTG/E
      z1dO9nF+OstUpsKXT/RxP10hEfRyeSHPaCrEZ8aS/MWlRdwuoRkWZbkgYVgWv/6KHb9oraRw
      eijGWkkmEfTy9t0Mp4diHOuP8sFUlnRZ5psvDXJ7pURZ1lnI1zjeb/ejJ+Ljh9dXeeVQgmP9
      Ua4uFLixXOK3Xhvh9koJw7S4PF94MmpQX7ib8aEu+scmOXns8IHWxTYcRxqmwPvF9WXb6aRY
      U3flY6BoJjPrtubu9kppV3XmayprJTv2UMPZZjd5pbpfSWu927UhXVaaK+UPS/9Exp7L7SUc
      DhEKRejpSj6JJjw1NBxlFnK1ZvSy/aDhaXV7U5iQg8ZBvvk6ODgC4HCwcQTA4UDjCIDDgWZP
      BSC/Os8vfvE++Yry6MQODk+A9rAopsYH5y9z/PgRLFMjs5Zl9OgxBCnDz96/ycBQH0G/n3g0
      gKZaqLpsR3JwB+lNPegfbJkGC4uLnDjzyr516Gllq/iUsmayE7forQLYpuvrBI+iNTZR4/NO
      A+I20umGxVJ+d8FsdxNxejON67NckBhKBD5VGY+iTQDS8/fIF/LcvjeNUligUPORGD1MzNCQ
      FAOtkOZ2BVxGEcXygFRCECzOvPnNLQu3BJGQT6Sm6CTDvsfqyLPMVHojmtpWEYobkZInux9e
      TiOEOmwM4vwOY+e0qlYbny8vFHaUt1GvYVmky7t7ilfrawv5msZCbnfC07g+qmE2V9J3y921
      nUWyaxOAaO8YXxs5TK2mAJO89+4FvJaGJ9TNl361C79HZDBXJBjwIQgCmiIheuq3myAAAB1Z
      SURBVHwEgls5vZusrKSJJXuIBFqqsXQ+eOcdho6dIb90l3jfOCMDjxgBzyjfv7rc8TL3c62g
      Exim1dy842mkTQAq6yvcLsocnpjA6xb53Oc/y9raKr7eXjwuF6Yl0NOd2sgQepglp0giGubK
      7Tscll4hFqw/ASwDwzApFEtEo3FmZ2boToSf+8BYdhnOLpEPHO9RYKwH27mDwFiFzCqKr5eZ
      m5eYnpkj3P8Cem2e+9cslmsWv/bNr+F279QYzKRYrXH85BlS0ZaNz0QfJ146g88fxNAVUv2H
      CAT8z6Ut0KMCYzV4nMBYD8vrBMbaqp07CIzVPTzOULKP9QV4MTVAqVwjPvIi1WKRiViK0K7i
      +wiEQiGWpheQJw/j92wITiLZeIo83gTHwaFTtAlAvLsPgOHRifZUjxm7tmdwlEOTxx4vs4PD
      PrCH6wACgUDnNr52cNgLnJVghwONIwAOBxpHABwONI4AOBxoHAFwONA4AuBwoHEEwOFAI1g2
      +xoYaytkWcbv79y6wdMQF6hQU6mpxkaAKdNEQMBV3zKqpmi4XCK+unmJohvNz4ZZt1Wpbydl
      WhaGaeGpbzio6LatU2tej0tAFAQs7N0ZvfW0FhaabuJtSbs5r6/FxKX12DRNNNPa9rxqmLhF
      odlHzbCDXTWON5ddUzSCPs+W12Nznx/arvr1cIv1GEAW6OZGnzf30cJC1c0HynsigbG2olar
      EQwGO1aerutP3BYI4L/9jxc4NRijK+zjB1eXmegJ80JflE8WCiwXJF45lGClKNMf93NjqURf
      zM/x/ig/vrWGrBn8k+N9eN0iP7uTJuL38OqhBKpucn4my1AiQEnSeflQgu9enGeyJ8znj3Tz
      1o015rJVfvWFXrrCPj6czSGpBp8/0s0nCwUM08LrFjFMi5eG41xZLGBZ8Np4kgvTOa4tFfm1
      l4cIel1cXyoiaQYvDse5uVzC73FRqKn0RH2Md4X580sLDMQCnB1NspCv8b/9N6e2vA6GaSFr
      BmVJJRr0ohv2AE6EvPY2qvUBHA14mnkaexM3vitJGqIo4BEFipJGT9SPYRgIgtDcd2637Htg
      rPmZe5RrCuWyRCoZQfCGmRwd2u9m7BvLBRlVNzk3nmKpIJGrqgzEAqyVZJaLEqPVEGslGZ9b
      ZHq9gmaYZMoKywUJSTP42Z0058ZTrBRkbtZKHO4JNwNjLeUlkiEvP7m1xu3VMlG/h+9fWSFX
      VVnMS1yay3NuPMVaUebGSomXhuOsleS2wFgFSeP9qSzjXSH+9hPbfHs+V+Pnd9K8MdnFUkHi
      k4UCh1J2O4NeF9mqSlHSSIV8LOYkBAR+dieN1y3yO394kW+8OGAPdlnjaF+Ui7M51ssKhmVx
      ea7AoVSQk4Mx/vbKMj0RH0f7IizmJZYLEmdHk4x1hZhZr3J3rcxQIoDf4yIR9PKDq8uMdYU4
      O5bkry8v43EJ/Js3J5rtd4kC99IVzo4mGe8O8YOrK4x1hUiFvFRVnaW8zJHeMIpuUqhpuF3C
      /gtALBoltz5NtSZTUU1iwQpSb+q5NIeu52zmbZhD25/tg0xZts+3mPNKamOP2416G+a8jbxW
      3UklEfSgaEYzraTqbebQrXW15s1UFOIBD5ZpC9xYqv3p25a3pV5FN1jI1TjcE+bj+XybObSi
      GVxbLJIuy7x5pJsri0X+9MN5fmk8xXSmQlfYi6zbgmGaJrJmsFyQ2vb2/fGtNb798iB3Vkuk
      ywo9ER8LuRoT3WHKsk5V0ZEUHbBYysv8/bUVMmWFj+fyZCoK410h7q2VOTUY4zsfLnBqMMpr
      Y0l+cX+dm8tl/odfHuPCTA7Dsri1Ut5/AcjnC6QGDhGs1kjGghiuIIHnODRiwxxaFMWmObT9
      2T6YylQZjAeQVIOaZmxpDi2KYtOct5F3p/sEt9a1kRem0lVeHU1wpe66uJUZcTNvS72GaXt5
      CYKAqptbmkOruoUoiii6aW8GXm9vtqqxmJcYjAea9W5lDr1Rr9DMu15RqSh2WTPZGg1z6PWK
      2kyj6GazrKKs1+OW2ukb1y9btdsuWHaUu30XgNHJo/td5TNBtqpS2KGbYydRtCfjrbXbekuy
      1vQsy+zAPXMhV0M1Hkw/lWl3lXTUoA6PxLI2tCr7wX7W5ewSuU+0OpVfns8DUFOMHUWF2Cqv
      ppsYO1DgyS2DqVHOzHr1gZDoW3G/frdUDZOby7sLhPtpuDy/M6f9TrCnTwBNqbGwsPTYnv3P
      Ov9wfbX5ebrl0dt4lBckbUfRHbbKO71epSw/OqrzJy2DqVFOtqqyE933+i4jQbQi10O25Koq
      s9nH2wduIV9j/TFjSu00ikWbAFiWwdWr15FlGVmukc1kMCzQymk+uj7FhQsXKBfzLEzfZjVb
      olSpUCgUyeVy1Kpl7k1NtRW+vjTDO+/8gvVnLJJBp7i9un93zaeNT+qhV0zLjiv0OBimteMY
      RptphHB/FO1O8SvT3L47i6zryJlpsjU/n//61wipElPTdxF1ldXFWUxDx/DNEAuZWDWLtapM
      V08P0aCPwxMb7pSheBcDfSkec43CwWHPaRMAIdjNt785RDZXhpF+fvqjtzHlKu5wF+deOok3
      EESvFvB4Ayi6gegSCPqCrOeyxCNB1LbiTO7dusH07BLHX93Bi66DwxOgXQA0iWu3Fjl87AWC
      Xhe/+S9/o3nu0Eg9BlBrXKA6qS03uRDo6+0nvJTBanmMmYaOphtUqzWCfg+G4CEUOHhR4xye
      DtpDIy7MUJBM3nv/PF6rglSDUCrC3K17xPsH+NznPkcstFODNQuXP8wrL79CpMW+Y23uFvcW
      i1SqVfzhKOGAj8+8+nIn++TgsGM2hUXpp79/jNLyDPmajmDKeNw+gsfdeGOJXQx+sNf1dG7f
      uk2qf5hGDLlEdy/xCsiyQizkxe0LIUnSc2kK4USGe3jeZvqnJTJc9/AYAOGRMQb4tFiUSjVe
      e+NzxFtih/ojPZw+3cPp05tSP4emEE5kuIfnbaZ/WiLDdRaRI8dP7F3xDg4dwFFQOhxoHAFw
      ONA4AuBwoHEEwOFA4wiAw4HGEQCHA40jAA4HGicu0A55nLhA79zNcHOlRMhrL7fkaioel0Ck
      HhdnLlsFAQ4l7XXyuVy1+bmsaGi6RTJkLyJWVR1JNeiq77Y5l7PNfVvzjiSDCNgxgdYrCv0x
      ewce3TRZKykMxgPb5m18BtsOfzAeQBTs1dn5XK3tfGv6tZJMPOhpxttJl2Uifg+B+o5Am8ue
      y1Y5lLKPCzUVURSI+uthT2QN07KIB7xb5205ljSdiqzTFfEhQDPSQ299O67NfbSvgcxg3Hb+
      Ny2LpYLkxAXaKY/vFL89nW6jYRhtjuyflmelz89UXCAArVbk45vTxEMeLE+YY5OjT6IZDg5P
      RgAM06ScS1ORYkQDMpLU+1wawz2KTrfRNE1M0+zoE+BZ6LMgCI/dziciAF5/mPHJoyTjIQxX
      4DmPC/RwDtorEHS+z8/cK5Do9jA+PvokqnZwaMNRgzocaBwBcDjQPJFXIMvU+ce//xGx3gS4
      Qrz28ulHZ3Jw2AP2VADW5u5w+eYcZ859lt7Eho5frhSp1hR8qo7PZz63LpGPwtECfXo6qgWy
      dIkf/exDXjx1FEOpsLSc5dRnXiPwmAuqbreLmbk5PvO5z7d9H4im+NavfwvbM7O+q4mjBfrU
      OFqgx2hL68H81D0CHpOp2QUspcDKSpmBYzWGEo+3QusNxnj5xRfQtwiN2Ax//VglOzh0hjYB
      GDlyipEj9mdTk7l+8z59dfuR3WMyNzNDoVjD7Uy1HZ5S2kMjZte4fOUWx0+8gMfrJZKIk1lb
      w1BlookkpYqEYOiYpkpxPUt4cJyEx6CimhiaxvDwUMsdXSQa9HN+aZYTyhskIxv1WKbOwtIq
      yUgAzRUgEemcDZCDw25oE4BEqodkco3rn1zEbWrkFB+hrhQBS+L+P7xF38RR4n4fqFkWlhXi
      VRV/cREtmCKbrxHvGSDqa9zuTWRT4OzZN+iOt1t5GrrOwvQ9Zr1hAh6BV195pbl1TyfZCzs/
      p41PX3mfpsxNsxGBycMTjA73YYgesAREt8jt69f59m/9FqWKRDQUoFwqcvSkF1nTcYnjhKMx
      sutZIr72dx3LNNE0DW3T9pSmoeP2+gkG3PiCMWRZRtO0jmoIHC1QZ+h0G/dKC/S4fXbMoXfI
      s2Ia/LRrgZ42c2hneupwoHEEwOFA80RMIdRaieu3p0nEw4i+CIcGe59EMxwcnowAeAJhgj4X
      K5kCHleBnmTUMYXoAI4pxO55IgKgVArUdIHhvhSCN+w4xHSIZ2ESDE+xKcR+4Y8kefnFrXaV
      cXDYX5xJsMOBxg3sySrsbmm8vz6t5TWu0dPcxkZZnVwIexb6LIrip58DKMrjb4rcCTRN62gb
      DMPYkwnX475rbkWn2/hpV0W3otMBxp62PrvBvmMEAo9r9dkZLMvqaBucleBPz7PSZ2cl2MHh
      MXEEwOFAs29qUENXef/CR3RF/NRUnXyhSioVw+2PcOqFw/vVDAeHNvZNAFxuL16XiKQaFDPL
      6GKQfEUlbJQcp/gO4awE7559NYeuVqsIpo7p8iJVq4QCXgzRSyTod8yhO4AzCd49+7oSHApt
      xHoPB5+s1snBAfZ4EmzoKpnMOob5VPjcODg8wN4Gxpq5zT9+cI0vff1bDKRCj87g8ET43seL
      /POXhx74XjcsTNNCUw3cLgFZMxAQMC0LQQC3KKLoBssFmf64n2xFZbInjGlZqLrJQr7G4R47
      GoKqm8ysV8lVZAYSQVTd5F66Qk01iAU8hHwuriwUkDSTM8NxZrNVbq2UOT0Uo6bqmCaslWVc
      gsChVIhcVeXd+xn+zZsTDCaCXJ7PE/a5SZcVXKKAzy1yP11hIB6gK+zjzmqZy/N5vnKyn4jf
      zbv317m5XNpbAQgnexnsW8Hjeb61rT+7naY35ifgcZEuydxNVziUDHIoFWxuB/RpMEyLiqLj
      c4u4RAFVNzEsC7E+GFdLMt1hH6tFiWjAQ1HSWcjXiAU8VBQdVTdZLcpEAx7KssZ6RaUrbCsc
      DqVC/O//cIcbyyUifjdLeYkbyyWO9UWQdQNREPhgKstrY0myVZWg10W2qhLwuDg3nuIP3p1h
      OBkk4ncT8rn5X79xnI/n89xaKZEuK1gWvHm0m7durOJzu5jK2IPyeH+Ud+5lWK8oDMQC9MX8
      fDyXx7As8lWVu2tlbq6UyJRlaqrBZE+Yt26sMtEdJuRz88Prq6TLMr//9jRBr4u1kkK2qjBa
      v96nh2L8yYV5Tg3GODee4r3769xYLvHqaJKf3l6jLOvcWS1vigxnqrz3wWVOHD+CZaik17KM
      v3AcQUrz9z+5zKmTR9ERiPkEDERUzUDWdHpSMdyeING28CYm0/fusLi8ysnn4BVIM0ws08IN
      VBUdw7TvgpYFH83lifjdBL0u5rI1VN2kLGnMZWuMpGr43CJRv5uVoky+pgEWJUlnKV9jvCeM
      opkkQl7euZuhN+pnIO7nZ7fTyJrJYCKAqpvcXC4hijDZE6Eia1yczXNmJI5hWpwYiPLnlxY5
      3h/l3HiKn95OM5WpcGowBth33xsrJc4MxwG4MJPjtTHbGve18RSrJZnrS8VmX++slQl6XbhE
      ezKdrapkq+ojr1FV0fmdP7pIxO/BVw8GdXOlhCBQ37/LRU01KEkaAKtFGbdLaH5ucHetDEBZ
      1qmpj9YaNdK0pr26WNwueVu6NgFYm7tPuVTk9v0ZtMIiuaqH5NgR4oYOLi/55SlWzShCbg5d
      1/DGhxE8JoWlKcZfeZNoWzUCXV1dBEOrnzr6W03VCdY3mtNNk4qs4/O4sCwLj0u074imRUPM
      LMuiLKmYCCiaSaaiINY1IxYWhZqGWxSwgKW81LxzlGSdlYJEb8xPWdbpCnv57sUFJrrDaIaJ
      SxSYz9Xwe1wIgCgKfDJf4OxYEkWzL2pjcN1dK3M/UyEe8DbvtrPZKgGPq7mRW+tAHEkGuTCT
      ZTgRxOdOMbNeRdIMzBYlXbaikgja9lKSZjyVc6tsVcUtik0BKMt62+DeL3YiOLBJAOL943zl
      0BEkScFikvPvf0RAMPCEunn1RRNfIMDRQAhLmwTRjS5XuHJvgVR3P92RB3X4/nCC06dOEvBu
      VJNZWUAXfdQqVRLRAIYrSHcyysx6lXdnVpp3hAvTOQ6lQuimiWla3FwpMZIMougm99YqaIbJ
      SCpI0OMiXVaYy9UY72rsIGiQCnmpqQZnRhL8wXszzbufYVpcXijw6qFEs02tA9EtCnyyUMAl
      CpwbT3EvXcHj2vhB76crTHSHCXpdmKaFpBnNwe/w7NEmAI1tSoMh++svfukLzXODQ62TpHqg
      q0iEN7v7ty28ViuztLhM3/BE87tMJkO1UqEo6cx4QsSCLhLRl1gp1PjD92cZSdqvUemygs8t
      ki4rTPaEmc5Um3dxsMhVVbojPiTVoKYaSK0Sb9F8GrBpmeNR90yrJY21beod3nmtTWkfks1q
      aXSjXsvadH67vFuka0390NZuswz0sJ5bLe18IJ21fVstNszurY3O7qji1uUqq+1Xav1u66Ja
      27k53R5Ogi0kSeHwC6eIBjeeDtFoFENwoyHRlYoieMOYprmFP0JLhx85iLc4v2kwPSz3Vm0H
      oVWKdl3CrtnxiN0q62YhszaV8RDhaREYYdOZzd+0ld9W7G5uCLvL8shyHpZoY9TzYJvtgz0U
      AJGjJ0498O3Q6CQPKtzYwuZ8w8ZbEIS23+KBmNKbVj4FYeMrQWjXQD0qHnVrzOqNFdVN5e90
      ViNsyvuQbK193Oj3zuoUWxI2o27vMG/j+mxOsV0e+9puXB9hc27hYXk3/aZbV7xt3vbPj/pN
      hJYxIGzxm9ppnm/9pIPDI3AEwOFA4wiAw4HGEQCHA40jAA4HGkcAHA40jgA4HGiagbEkSXqi
      DYl4LH5lMkYq5AOgJPsYivs5FHPTE/WhT8bpqdvQ1FSdouSnP2Y71ciawbEuH4P1Df1U3STk
      c6EZFiNJD185luBQ0jaTMC2LvpDIWNeGlWbKDxPdYQBEAXTTQhQExuJuvnoswUAs0DTRGAiL
      dEd8zR1vWvNuPh6NuQn6XIR9HgDGEx48LpFYwD5O+Swmeuy0yZAXLzGSIR9jcTefH4+hGiZd
      Yft6VBSNqmI07Yha6xmIe/knRxIMxP2Mxd28fijMRNLDcH13T90wGY65mtegNe9Y3M3XX0gy
      3h2ioVvvCQiMpIKI9bXA1vRet0BF9uF1i4zF3XzpaIJUyIvfY1+PkaiLaMDTtN1qzRsNuIl7
      TWIBL2NxN78yGcMlCMTrC6WFlBfTskjWx0Br3p6ID/1wnJ6I3cfPjkUoS376Yvb1kDSTfLeP
      geYYMJrXYCzuRj0UZjjqYizuxhwON8eBs0PMDnlW3AMdl8jd4bwCORxoHAFwONA4AuBwoHEE
      wOFA80Q2yLAMjeWVVVxeHy6Xl+5U/Ek0w+E5I19VSYQeHVwtX1VZzEv0xnxPRgDu3brKvbkV
      1tLrfOvXfwtVVdF1veNhs/ciOtzT3MZOR3FrlPm4bSxIOh6XgNcl4nEJFCQd0TJRTI2qYruc
      zmZrAIylQmQqChVFJ+h10R/1E/C6yJQVFvISmbJC2O+mN+LjH26s8duvj/JnFxf47ddHuJ+p
      slpU+GSxQMjrZqI7RDzopabqvD6ReqBdf/j+DAC/NJ56MgIwPH4ES/TzwolTlPNZov09HVXf
      QbvteSd5XtqYr6osFiQmu8NcWyrymbEHt6y6vVpGFGAuW0M3Lb56sm/Lsn54fZWvnuzj2lKx
      6YgP8McfzDLZE+ZYX4SJ7jB//MEsw3E/b93KcLgnzG+8OsRPb6cB+LWXh7g8X2AhX6M/FuDM
      cByPy/bbXi7ITK9X6Ar7cIsC709lSYa8VFUdQRAwTAvFsIW/qupMrVc5OeBCNR4eJlIQ9vgV
      aH1xik9uz/Pi2XN0xzYiwQWCEY4eP9GWVhTFjm4+0enNLCzL+lT65lZKsu2ULys6i8Uqp4fa
      XwHvp8sMxAPcT1ceOAewXJC4u1bm9kqZWNDD10/3E/V7sCyLn93J8NnD3fzxB3P89788Tq5q
      O9E3Fpck1eDqUoH372cRRYGaavLvf3yPf/vlo4iCwGrJdmD/8olevvPhPF841svFuTwhr5tY
      MEemJJMK+0iGvIR8bm6vlPjLj5fQDNvX+sXhDV/rhiOKIIgbNzgBSpLGpbk8v3l2eJPTk1C/
      KUCuprFWkjk9FGs64UiaSbpsR6e4ulRktSjX04vtzjY0vtt6DGzUKW4Ki2Io/Oydi5w+dQxD
      rbGymuXYi2dwSav86Bc36U6G6e3vQ5JlfB43hXyZQCiIJpWIpXqoyhovHB5vqQjm5ud5+dzr
      uxkfzxVlWcPndlGWNVJhH7ph8r2Pl1A0g4hPJF3ROD0URzNMJNUgGvDw0WyeN4+6+burK6i6
      yWy2xly2yldO9FFWdP7L+TmuLxXpi/l5bSzFh9M5ZN1gtSgxn5MoKwYfzeboCns5P50DLLIV
      lZFkkPlcjbfvZhjtCnG0N8In83k+ns/zf/3sPiCgGSZXFgv8xaUkVUVndr3Gu/fX+exkF+en
      s8BGEIHWuEB/+uE88aC9wv1311b4+ql2X/FsRaEkaXyQqzW/+7d/cZWg10Uy6OU/n5/j7TsZ
      4kEPv3K0h+tLK/zV5SW+dLyXXNVu+3dvLTRXhq8sFMlVFd6+u85Cvsb9dJWVokRf1I8Rsri6
      WCDkc/PXl5dIhLzcXSuTr6qcHIxxd61Coabyk1vpdgFYmrmHZcjcnZrFqGVIZzV6J4+TwkSu
      VdEjLi68/x6+rkP0uLKUJDeKGCDqrnJjaoXuVLxNANy+IOOHBlAPaNSEbEXhf/nr67zQH+X2
      aomKrHOsL8qVxQIA15eKeFwilgX30mXevpvh9YkuFM3gOx/OkykrXF0qYpr2AP7OhXkm66YT
      s9kas9kalgXnp7NtkS0uzxeYylQo1uPvbI4LpJsW99MVUvUJo2ZYbWFEGrF7XKItEHaaR88v
      DNOOmvH2nTSpkJfFvES+qlKQNFaLMqslmSsLRYYS9tvAQq6G2yUgxQIsFSRqqk5Z0Xj3/jqa
      YVJRdJYLtomOaVlohtnWDt20+A/vTAN2+JWFfI3j/RvBeRrXJBX2slKQubFc4nffnCBbUTBM
      68HIcH2jxxicOI6u6ZimxscfXycecOFx9fLNb34NyzR48YyK2+NDxMTCfkcTgWIuzeJ6taU0
      k4X5BQzThe85jwy3Hf/5/Bx31yrk6kGlZrNV5nO1pj1PVTUAo3lnrSobQaNKkoZp2aEJn1ak
      TbF3yrLGt3//fXojtp3WQq7WJpgASwWpKQDbsZWwFSUNaRc30nvpSvNztrIR1OvSXL4tXZsA
      ZOZnCPb2kMvKREJeTr94ArVSpmrouLwBrEoaMzqCp1rAxIWmG3jcbjRVJtk9SFdf64RDJB4K
      cvHqdY7Jr5EI4/Cc0XiSbUUjulunyJQVqsrOBSC3TSS7zcLVJgCVQobpTJqVuTyRvjgRUWHx
      /hIDJ46jyDrHejyYgSEW793k5q17+FOjJKNuDLlM//gZjk8OtpRmUtEMzrz8Gt1xf1ul1XIB
      zXTh9bqxLAg5odKfO7YbgE8bbQLQP36MkWCQ8niFUk3GY6kMDx8mHA1RkQ2SITdTizMk+0b4
      bO8hfMEoLkvm+q27jI08qCJzu1xUi0VUzWiaD4O9Jeqt6x9zb36Fr37jW4Q6ZwTq4LAr2gQg
      HLff1Xzdfro2JWwot04ef1Bf/GbPVtHhBEYPv8Ck+8E9ZlcX54h29XM8HCefyxH2ic/lFkl2
      +pZoaFYjstqmQFutUc/aPvNAJLWd5LU39W4/xtp5va1lPOy83a72iG+NyHCPKnvjYFNZ1qPb
      1VLRjvu4+fpZ9T97uA4g4N5i8AMcO/3qA99ZltVRO3HgifsD2Dro1mBQ9cBbDwTy2hz0iY30
      Lbrtzee3y9vQpW8OLLbTejfKePh5u10NvftGoKu240e0GWFTWcKj29VS0Y77uPn6CZb93cFU
      zzg41Pn/AYLNbDxOSH2tAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Voltage by Lamp over Time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Voltage by Lamp by Hour' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Current by Lamp over Time' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAYL0lEQVR4nO3dSXMc53kH8H8v092zL1iIZbBxgUiClMTFVuTIiVy2b6nKJXaq8glSOeYD
      OPdUkksuqeQYH5IqJ1V2XCo5cWRJtiRaEklRlAiuIvZt9q27p7c3B5ADDInhgD3zNobh86tS
      lYbAvG8D6Gd6e/rfAmOMgZCXlHjUC0DIUaICIC81KgDyUqMCIC81KgDyUpMBgE4EkZeV/Ph/
      TNPkPtnyN3cwkj2F0uZD2FIUo5kEPM+Dpmlc5vM8D6LIZyP3+ENDEAQu4/NedsYYt/F5Lnu/
      x5aB3T9iOBzu26Cd2EYdgqyipltwPBNnTs1B13VEIhFf4/3D/9yF7XgAgI2ygZWS3vb1uCpj
      YSLZ8f1fb1RQazoAAFEQ8O3ZzKHmvbFWhmG5YABUWcS5ySSurZRaX1dlERem0l3H2a6aeFho
      tF7PH4sjE1EAAB7zYNgebq5XWl+fSIYxnXn27+rWZhVV0wYACADemBvCVCaCyZQGlwGfPSyC
      4VEBCP5WpAf5OnK1Zuv1hak0VHlvLI95hxr78mwastj+AbJRNrFS1Du84+mxFyYSiGtyx+/v
      5NVsCmFFghDkhbBibhOSGkO9UgQLRZEdG+6pAM7+5F3oltvnpSQvk+cvnR5kRsYBAMlEPMhp
      CemIYwEw3PnqBgxXwNzJ00hGVX5TEeITx9OgAmKahoZhQZLobCsZTFzXTDWsQG/ooJOsZFBx
      LQCzXsXa6irqut33sX/0Tx/DtOkAmPSGawHIahQnX5lHMqr0fexbG1V4tGkhPeJaAAxAWNPA
      aCeIDCiuBRCJxWFUSzDoXD0ZUG2nQVcWv8BquQEtNgSnWYOez+H8Wz/EcCzka3DX8xBSFCiy
      BObaWFrZwMzsDNaW7iE1Oo0EnRolR6xtC9DUdUBNYDihIpGIgtk2Krrlc2gXK+t5zIxl0DAs
      VHfW8eCbByjpFrbWN1DTDbiuC8YYPM977v8I6Ye2LcD02dcxp0ZQL+egRRIYfXMU6aGoz6FF
      pOIKNipNnJ8KA1YamhaG6DaRTCbhOA5s24bneb66UemogvQD914g127CZhI05eCLzn57gRZ+
      8i4adGxBesS1F2hr6R7urGwgmhrH5VfneU5FiC98rwOEQpBkDceGUzynIcQ3rgUghWSUCgUk
      01QAZDBxLACGcqWOdCoFSeRz1xQhveK6BVBUFZJEKz8ZXBwPggVMTs9hcnqO3xSE9CiwRn3G
      GOr1BhgAvdGAS51sZAAEVgD1/Bre/+BDVA0TVz/+EIsP14OampCOAisAWVEhiRKsZhOSJCKs
      Uh8QOXoC2wXHcY5kAQzD8BXJ8v2//4C6TEnPWgVg2/2/a+tJ9xe/xPiJc8iv3oMtRTExmnlh
      g7GA3eOaFzEYC3hxl51bMJai9P+urad4Npggo27YcLwiUvPHe8oF6sZxHMgynxNdj5v4JEni
      Mj7PZWeMwXVdbuPzXPZ+jx1oLlB29hTgmZicGAML9b7Sr5d0eAy4vVVDeV/b9hvHhyAAcF33
      qRX0yjeFZ445MxSF5XrYLButf3s1m0JE2Rvny7UydMsBY4AaknaT4ZZLBw3XJqxIeC17uKvi
      ixsVVMy93dJvz2UgCsJuAt4ByWlnJxK4tVE9cKzpTAQTqf27mbst6F9v1tF4lIwnSyIuz3RP
      szuMg37v+w3HVDieh/K+e8WHYyrCSvt7mo6LnepeAl0iHEI0dPitVlm3UNv3OzyW0KDI7VuP
      QJPhDkLJcC+fTFSB6zFUjL0CGIoq0ELtBWA5HnL1vQKIazISmozd0MfuKoaNenOvAEbjKkJP
      RPRwDca6df0qTEg4MX+WgrFIS7Hx9E1WhQP+7Uk102n7RH9eO/vyTB/jGoyVSsRgWC4FY5GB
      xbkXKIRCLg+Xnj9ABhTXArCaBqqVCswm7aeTwcS1AERJxYn5U4iH+3+o8b2/e58uhJGecQ/G
      CskylxvYd6om3RhPesY3GCseh1EpoG7yv8pMiB9t+yYPv/wMqxUdWmIUjtlAo1bBD3/wfd+D
      G4YJQQohqinwnCbu3FvG/Ol5LN1bxMjkcQrGIkeurQAc20YoMYqhMENDzUBELw1yLrbzNZya
      OYZqvQnH2sHG5jpGp2ZQKRYgxUagyrtXDV33+fflafeH9ENbAcy9+i2ckEOwTB2OJ0A9MdXD
      0CKG0xFsViycy0YAawTxWBEysxCNxaGEZEiSBEEQfDVl0Y2WpB8oGIu81Lg2w63fX8TdtU2o
      sWP4zuUFnlMR4gvfRyRpKgQ5ghOzEzynIcQ3rgUQUjWYtQrCUb8Bu4TwxbEAPOQKZYTDYQrG
      IgOLazdoMpX0db8vIUHhGow1MjaJkbFJflMQ0qMAg7E87OzkwQCUCjnYLj3lhRy9wAqgtrOK
      a9evo6wbuH3jCyw+WAtqakI6CqwA1EgMshyCZ9uQQjKSiXhQUxPSUSsXyDTNI1kA0zR95QL9
      +T9fofsBSM9aBRBEOMTXX3yK6dOXsLO0CEuKYmbyGFzX5XamqFs8Ry8e/854BUDRsgczdisY
      i1dK2H6KLMJlAuqmDccrIRY7AV3XfYdy/eW/XoXpdN4KPCv9rGLYWNzcy9FJRxS8Mta+W3Zz
      rYKGtdsRG5JEXNqfm/P48+KJ4fO1Ju7n6q3Xo3ENx0cOfyFwq2JiqdBovT49lkAq4u85zc/i
      uB4+35dllIkqOD4cw+fLxda/DUVVnDoWe+6xeabOPTn2wkQSK8XGgWkRKwUdG5XO+U5AwLlA
      jVoFTJBgmQYQiiCTjFIuEDlSgSbDRePJ3f+JPf+nCiE8cA3GuvnZ72FKCuZfWaBgLDKQuLZC
      DA+lYTuMgrHIwOLbDapIWFtage3SDYxkMHEtAMdxwJgH5xlnagg5SpxzgSQcP3USES3QY21C
      Do37znkQ1xcI8YtrAUTjCRiVPKp69+jr53Xub35F1wBIz9r2Te5d+xirVQNaYhxWo4CIZ2B0
      4S3MDvu7UFWuVOEyEclYGK6l4+atBzj36nk8uP0lxmde6SkY64if60H+n3hq5zw6PI0Uqqgg
      jp2NKs7G/F6Gd1GqNbFwKotSRUfUyqFULqCsN9FsNLCdL0EWEnAcx9cTKmn1J/3QVgCnLn6n
      /asXX+9haAnjIwlsV5o4OxkDcySkd+pQYEGNRJFOxhCJRKDruq+HntGRBekHrr1AjDG4tgWH
      SdBUCsYig4fr+cnVu1/h7toW5MgI3n6zl60JIXxwPQsUjkYghGJ4beEkz2kI8Y1vMlw4BtZs
      QAwF8BBuQnzgGoy1sbkNUZSfejYrIYOC4zGAiPGJCRiWS+fsycDiehCczAzjQmaY5xSE9CS4
      YCzPwfLyKhhj2FxfhWnTKUxy9AIrgOrOGu7eu4eibmDl/j3cfrAa1NSEdBRYAYQTKaiKCsF1
      oWgKRoczQU1NSEetXCDDMLp/Nwd+g7H+6qdXYTqUL0p6E2gsyhef/g5z59/E5oObsMQITs5m
      4TiO71iUbihc6mAv8rJzCcYKSjSswnZc6KYDB7WemuEAoN50Wm2h62UDq0W99bUz4wkkVBGq
      JMLat6VQZBEMDLZzcN2HFQmSKIAxhkbz4AP1G2tl6E0HDAxaSMa5ySSu7QuZUkMiLkylD3zv
      Y6KwG7bV3LdsWkiExwDL8eC4DPITiyiKQOTRwwYNy4XrHe6zS5FFKPLeys4Yg+u6OCBL6lAe
      5OrI1Zqt1xemU1Dl3ZVSDYmQJPj+mx7EcrzW39BxGeIhqW8PXQl0C2AaDTCIcG0LTFYRj2hc
      g7EiioSYKmNn3x9rNK6CMSBXbx74nuMjUYRDEjzGsLhZ87Vch6HKIjJRBZuVvUzWqUwEtuNh
      q3pwTms4JLVS5pYKjY4F+qRjCRXDsfZ7L1yP4fZW/3++bDqMpCYDfbwTMFdrtv0N54ajTyW8
      Pa/XsimEFSnYAjgIJcORo8Q1GOvLTz+BDhmnF15DioKxyADiGoyVSSehmw5EekgeGVBcrwNo
      EQ2VQvHQB2uEBI1rAXiOCwYPjAqADCiuBeAyAdOzs1B7PGInhBeuBSAAcGwH1A1NBlVbATi2
      hUq1BstqwmxaaDQaPa28aiSCan6TSzAWIf3Qdhr04ZefY7VqIDY8A6u+A7uUw/k//hMMR/3s
      wjDUdBOZkRGkYhocs4ZrX97FhcsXcfer65g6sdBTMBYh/dBWAHJIwfiJ45CqG2gkMmCehYZu
      YDjq54kuHvL5CoaTEVRqJsJWHrV6FVXdgmsaWNvKY3Y87TsYK19v0p1mpGdcrwRXijmUdRvT
      kxNgbhN37i8jm51AbmMNmYkZpGJhygUiR4prM1w8mYGiGjCbNsKaijOn53f/ff40z2kJOTTO
      wVg38fXSOpT4GH7w1iWeUxHiC98tQDqDSKGJSxfO8pyGEN+4XgeQQypEx4ArUC4QGUxcg7GW
      lldg2gxhhR6RRAYTxwIQceqV05iaGIXj0r27ZDBx/WgOR+M4s7DAcwpCehLYzrltVHHlymew
      XA83r/4eO6V6UFMT0lFgBaCXi2joddQME0bDwMZ2LqipCekosKPT+OgEpuouVIFhbCqLofFs
      UFMT0lGgwVi21YQoK3CaOjxRQVgN+Q7G+sUX63C63GjjeYzb7Zi7DSSM23OQeS87A4P4Ai57
      v8cONBXiyge/wvzl72Np8RosJuHVhTMUjNUBLXswYwd6gn5sbAJOU4csSxDl3p4SCQA/u7oK
      x92t3yeDsQDAY3ufcolwCGfHE739APswxsAAiIIAy/FwbWUvGGskruLEyG4H7bWVMixnt2lP
      C0l4fSr11Fh3t2soNvbumbg8m4EABukZK+jiZhUVw269PjORwOJGtfU6m4kgmwofvOwATo1G
      8dMrK099bXY4irFE+xb5zHgCi5t7Yz/INZCrHZxddHEmDUnAM5e9k/FUGNOZ3Q/D20/8fI+5
      ntc2djYTQVm3UN+X8nVuMomoKmOl0GjLXTqfTbaCxR6jXCDyUuN6Fsi2LLiuA9uhlZQMJo4F
      wPD11U/ws//8+YGbMkIGAcdjAAHpdAojdqgtmJWQQcL9OcGuacKyqReIDCauBSCKMpRoBLFw
      qO9jf/dv36MDYNIzvgfBtoNoJALX6/8WoFinqBXSO74758zFvdt3YNAnNRlQbQfB5Z0NLG0W
      kEkn4UBCXGaIH8tC83nhLRxLYmw0Dc+l+BIymNq2ALnVJVTrVTiShmppB++9+y5KvlPdPOQr
      OuZPzEFVJOjlLfzyl++i3nTwzs//A/mK3n0IQjhr2wKkRicwMT6LnW9uIZ4awVtvv42Y6r/v
      olbKo+B6mB/OwnNceMyDbhiYyU5gdWMHkdCo72As2qaQfuDaCsGYB4/t9oUwxtBsWgiFZDi2
      DVlRIYkCBWORI8W1Ga5RKeL+w2Wkj81gZmIYmrabBcqrU5CQ58X1LFC1kEO+WMbG5jbPaQjx
      jWsBxNPDiEVjOLcwz3MaQnzj+4gkz4GuH9w3Tsgg4BqMdffOPZiWg3CI9vnJYOJ4ECzi8ne+
      i6begOt5kCXqCCWDh+tZIEEQoPl6uAYhwQjsY9lqlPDhhx+h6bi4duV32MhXgpqakI4CKwCj
      VkHTMtFoNmE3LezkS93fRAhngaVCJEazeGVehgqGmZOnkBqdCGpqQjoKNBjL1BuQ1Qia9TIc
      SUMyFvYdjPXR/TzcrsFYHrfsm8cdJPyCsTguO3bbVEROz23guez9HjvYYKz338X8t36Apdtf
      wPaA8wtnKRirA1r2YMYONBhrcmoGrqVDU0NQQ70HYx0Gr7E9zwNjjGtfE69lZ4zBdd0X8vfe
      77Ff6GCsq8ul1m7QxqNkuN8/LII9apZmbDe78+x4Agmt/b7ksmHj9tZe2pkoCPj2bKb12vEY
      Pl8utl7LoojLM2kAwI21cut+ZFUWcW4y2Z4MF9tLhjuMuztPJMPNZCDi2Z/Qi1vtyWlvzA2h
      287Y9FAE48kwAAbbcXFtZe9MnCwJuDST6fzmfb7J1ZGrNVuvL0yn25I/PNeF2OGD4eJ0qqdr
      Qo7jvDgFYBoGJFmCx0SoHR6TRMlwL5d+Z+ZOZSLwPIb1sr9jWI67QAy3r3+Cq3fW8Kd/9uOO
      BUBeLl3OWzy35UJvdxZyDcYaHhnDeW0IYYV6gchg4vuYVFlAfnMLDeP5b3kkJAh8C0DRkBwZ
      Riqu8pyGEN+4B2MpcojSocnA4hyM5eDm9etoNGkXiAymtoPgwvoylraLSCQScJkASy9j/uzr
      0EL+6iSWGsa5hVMQIbSuPgqiCOa6EESRWxsBIYfVtmYXt9ahWxa0WAK2bcIsl1Go+e0R8rCx
      XUJ2bASiKEAvbuIX//UOaqaNn//s37BTpmAscvTatgBDkzPIjkxiZ+kuotEo0EwjGX3+RrXH
      LL2ClbKLs6OzEEQBgiDA0HWcmT+JzZ084qrgOxiLkH7g3grRrWvS75Xgv/iXK7jyTaHvF1bI
      y4XrQXAlv4lPPv4I95a3+j72jdUyrfykZ1wLwGw04HhAo1bjOQ0hvvF9RFI8AUkQcOLkLM9p
      CPGN61MiHduCaTmQ+t0CSEifcC2ApaVVOI6LEGUCkQHFNRjr4htvwrUt0DMiyaDi3qQvhRRQ
      MzQZVIHtm5i1PH7969/AsB18+tv3sLxV7P4mQjgLLhlO1+G4DhpmE67jolKtBzU1IR0Fdp9i
      fDSLSxcjiIUknH71AmKpw92ATQhPgQZjVcsFaLE09HIOjhRBOhGBZVm+grFub1XR7fnbHsfw
      JwYGMAaBV7gUx2UHHnXmvoDL3u+xZWC3T4dXONV+X139CCcvfg/buSJsL4/RofMA4KsAXp/t
      /h4KlzoYYwye570w4VU8xw40qiE7PQdmG4jFwmChGDRN6+kP8Y/v3UO+3v4c408f7jXIxVUZ
      P7qcxa3NvVaMqXQYHkNbjMa5iQRi6t6vYrmoY7PS5ck2bDd96KAmP1UWcWEq9fw/0D6u50F6
      Zi5QrS0X6A/muu9SnptMIqbKYK1coELX99iuh6sr5dbr4ZgCURCwsy8XaL+L0ylIAp657L3o
      9nt5lvPZJKJPpJO80MFYlAtEesU1F6iUy8MTBYRjSUTUUPe3EBIwrqdBN1fu49e/+S2aDl0L
      JoOJazBWOpPBtKu25UYSMki4rpnMs7Gxsoqabnf/ZkKOANcCCCkRjGYnkI5RMBYZTFwLwHFd
      aIoKp9sVK0KOCNcCkGQRyw/uQbco9YEMpraD4O3l+1jJVRBLJOG6LjyjitmzF5DQ/B0rh6MJ
      TE9PQhJEMMbQaDQQjcXQqFWgaDEo9AR5csTatgDV/A5MlyEWj0NkDSw9WEWp1uWKaEcuVtbz
      mBzNwPMY6vk1vP/Bb1ExbPzu/fdQqvPvPSKkm7aP9mMzJzGVHkV+7QHCsWM4e17DaCrsc2gR
      omdgbcfBwvhxSEyFJEqwTR2z01nki2XEVdF3MNYvbmzAcSkXhfSGeyuE57rwIHR8LpTfVoiF
      n7yLBrVBkB5xPQgubq3ikyuf4N7SOs9pCPGNawG4tgMmiPAo+5MMKK4FoGgqzIaBqelJntMQ
      4hvXXCCzaSGkqhSMRQYW1wLIF0pwHEqGI4OLazDWwmsXcMZ1wehJMGRAcb8lUuR0bygh/RBY
      o75R3sY77/w3GpaNj/73V7i/lgtqakI6CqwAXMeGx1zohgHmeTCbVvc3EcJZYKkQ0aFJfO/t
      NBRVwaU//CMoGv8YFkK6CTQYK7e1jvjQOGqFDThiBJlkFK7rQlWf/4aZfL2Jbk0cnudxy+3Z
      Dcbq/OyzXvFd9t1sIPEFXPZ+j80xGIthfXkJFgNGjk0iFlZQ2F5D/NgciuU6HK+KmezrME3T
      19zRaLTr91Aw1sEoGGsP110gs1bGnfUCMqO7V4Kz08cBx0AqGQMLxSDLMkRR9L0S/fW/f/HM
      xAnGvI7xfxXDxuJmtfV6eiiCieThOl9vrJVhPGrEU2QRF6fTra/l6k082NkL/l2YTGBuOIp8
      zcK1lRKsR8sbViS8lt0Nz9qqmljKN1rveWUsjlRYbi37Z0tFuF2eCHh2IoFbG9Vnfk/b948n
      cGvfz5+JKpg/Fj/wey3Xw7XlUuv1SFxFNh3G9X2BWY9dnEkjJIJb7OJaScdaaW9v5ceXp1DS
      LdTM3XablaKOjX2hZweFYe3HtRt0e+U+7q4VcfHSBUQ75AJRMBY5SlzPAtlmHSsPH6LaoFQI
      Mpj4pkJoMUzNzSIVU3hOQ4hvXAvA8xjCWhje0caPEtIR1wJQNRWF7Q2YtJ9OBhTnYKwwhjJp
      6gYlA4tjAbh4uLqNiZEkmjZtAchg4lgAIjTZxXqhgUSEohHJYPo/kMosHElX8YgAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Voltage vs Current' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Power Factor by Lamp over Time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Power by Lamp over Time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Temperature by Lamp over Time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Temperature by Hour of Day' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Driver Temp by Lamp' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Power Factory by Lamp' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Power by Lamp' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Voltage by Lamp' width='192'>
      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
      /j+BkvyPgEi/zgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Temp vs Current' width='192'>
      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
      jLt3AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Temp vs Voltage' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Temp vs Power' width='192'>
      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
      8/8xotIooLmbJgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
